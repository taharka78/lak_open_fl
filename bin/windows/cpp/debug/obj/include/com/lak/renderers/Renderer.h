// Generated by Haxe 3.4.0
#ifndef INCLUDED_com_lak_renderers_Renderer
#define INCLUDED_com_lak_renderers_Renderer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,lak,display,SelectionSprite)
HX_DECLARE_CLASS3(com,lak,entities,IsoObject)
HX_DECLARE_CLASS3(com,lak,renderers,Renderer)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace com{
namespace lak{
namespace renderers{


class HXCPP_CLASS_ATTRIBUTES Renderer_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Renderer_obj OBJ_;
		Renderer_obj();

	public:
		enum { _hx_ClassId = 0x0b24e75e };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.lak.renderers.Renderer")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.lak.renderers.Renderer"); }
		static hx::ObjectPtr< Renderer_obj > __new();
		static hx::ObjectPtr< Renderer_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Renderer_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Renderer","\x63","\x81","\x8d","\x8c"); }

		static  ::com::lak::renderers::Renderer instance;
		 ::com::lak::display::SelectionSprite selectionSprt;
		bool canDrawRect;
		void createEllipse( ::com::lak::entities::IsoObject obj,int color);
		::Dynamic createEllipse_dyn();

		void centerPoint( ::com::lak::entities::IsoObject obj);
		::Dynamic centerPoint_dyn();

		void destroyEllipse( ::com::lak::entities::IsoObject obj);
		::Dynamic destroyEllipse_dyn();

		void run(int delta);
		::Dynamic run_dyn();

};

} // end namespace com
} // end namespace lak
} // end namespace renderers

#endif /* INCLUDED_com_lak_renderers_Renderer */ 
