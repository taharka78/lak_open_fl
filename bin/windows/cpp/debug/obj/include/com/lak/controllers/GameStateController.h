// Generated by Haxe 3.4.0
#ifndef INCLUDED_com_lak_controllers_GameStateController
#define INCLUDED_com_lak_controllers_GameStateController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,lak,controllers,GameStateController)

namespace com{
namespace lak{
namespace controllers{


class HXCPP_CLASS_ATTRIBUTES GameStateController_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef GameStateController_obj OBJ_;
		GameStateController_obj();

	public:
		enum { _hx_ClassId = 0x333d4ebd };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.lak.controllers.GameStateController")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.lak.controllers.GameStateController"); }

		hx::ObjectPtr< GameStateController_obj > __new() {
			hx::ObjectPtr< GameStateController_obj > __this = new GameStateController_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< GameStateController_obj > __alloc(hx::Ctx *_hx_ctx) {
			GameStateController_obj *__this = (GameStateController_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(GameStateController_obj), false, "com.lak.controllers.GameStateController"));
			*(void **)__this = GameStateController_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~GameStateController_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("GameStateController","\x1b","\x7e","\x4a","\x46"); }

		static void enableSelection();
		static ::Dynamic enableSelection_dyn();

		static void disabledSelection();
		static ::Dynamic disabledSelection_dyn();

};

} // end namespace com
} // end namespace lak
} // end namespace controllers

#endif /* INCLUDED_com_lak_controllers_GameStateController */ 
