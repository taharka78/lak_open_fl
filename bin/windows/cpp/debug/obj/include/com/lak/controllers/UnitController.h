// Generated by Haxe 3.4.0
#ifndef INCLUDED_com_lak_controllers_UnitController
#define INCLUDED_com_lak_controllers_UnitController

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(com,lak,controllers,UnitController)
HX_DECLARE_CLASS3(com,lak,entities,IsoObject)
HX_DECLARE_CLASS3(com,lak,entities,IsoUnit)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)

namespace com{
namespace lak{
namespace controllers{


class HXCPP_CLASS_ATTRIBUTES UnitController_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef UnitController_obj OBJ_;
		UnitController_obj();

	public:
		enum { _hx_ClassId = 0x5981bafe };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="com.lak.controllers.UnitController")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"com.lak.controllers.UnitController"); }

		hx::ObjectPtr< UnitController_obj > __new() {
			hx::ObjectPtr< UnitController_obj > __this = new UnitController_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< UnitController_obj > __alloc(hx::Ctx *_hx_ctx) {
			UnitController_obj *__this = (UnitController_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(UnitController_obj), false, "com.lak.controllers.UnitController"));
			*(void **)__this = UnitController_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~UnitController_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("UnitController","\x60","\xc8","\xfe","\xf3"); }

		static void create(::String unitType,hx::Null< int >  posX,hx::Null< int >  posY);
		static ::Dynamic create_dyn();

		static void attack( ::com::lak::entities::IsoUnit unit);
		static ::Dynamic attack_dyn();

		static void walk( ::com::lak::entities::IsoUnit unit);
		static ::Dynamic walk_dyn();

		static void die( ::com::lak::entities::IsoUnit unit);
		static ::Dynamic die_dyn();

};

} // end namespace com
} // end namespace lak
} // end namespace controllers

#endif /* INCLUDED_com_lak_controllers_UnitController */ 
