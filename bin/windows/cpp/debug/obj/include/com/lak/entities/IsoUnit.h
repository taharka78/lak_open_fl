// Generated by Haxe 3.4.0
#ifndef INCLUDED_com_lak_entities_IsoUnit
#define INCLUDED_com_lak_entities_IsoUnit

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_com_lak_entities_IsoObject
#include <com/lak/entities/IsoObject.h>
#endif
HX_DECLARE_CLASS3(com,lak,entities,IsoObject)
HX_DECLARE_CLASS3(com,lak,entities,IsoUnit)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,events,Event)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)
HX_DECLARE_CLASS2(openfl,geom,Point)

namespace com{
namespace lak{
namespace entities{


class HXCPP_CLASS_ATTRIBUTES IsoUnit_obj : public  ::com::lak::entities::IsoObject_obj
{
	public:
		typedef  ::com::lak::entities::IsoObject_obj super;
		typedef IsoUnit_obj OBJ_;
		IsoUnit_obj();

	public:
		enum { _hx_ClassId = 0x2248edd3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="com.lak.entities.IsoUnit")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"com.lak.entities.IsoUnit"); }
		static hx::ObjectPtr< IsoUnit_obj > __new();
		static hx::ObjectPtr< IsoUnit_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~IsoUnit_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("IsoUnit","\x49","\xb6","\xa6","\xf8"); }

		::cpp::VirtualArray nodeTab;
		 ::openfl::geom::Point pCurr;
		 ::openfl::geom::Point pEnd;
		::String lastNode;
		Float xmovement;
		Float ymovement;
		void goTo( ::openfl::geom::Point targetpt);
		::Dynamic goTo_dyn();

		void onStateChange( ::openfl::events::Event e);
		::Dynamic onStateChange_dyn();

		void update(int delta);

		void move();
		::Dynamic move_dyn();

		void moveAtDir(::String lookdir);
		::Dynamic moveAtDir_dyn();

		void lookAtDir(::String lookdir);
		::Dynamic lookAtDir_dyn();

};

} // end namespace com
} // end namespace lak
} // end namespace entities

#endif /* INCLUDED_com_lak_entities_IsoUnit */ 
