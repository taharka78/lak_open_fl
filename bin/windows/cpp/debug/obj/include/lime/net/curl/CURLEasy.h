// Generated by Haxe 3.4.0
#ifndef INCLUDED_lime_net_curl_CURLEasy
#define INCLUDED_lime_net_curl_CURLEasy

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(lime,net,curl,CURLEasy)

namespace lime{
namespace net{
namespace curl{


class HXCPP_CLASS_ATTRIBUTES CURLEasy_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef CURLEasy_obj OBJ_;
		CURLEasy_obj();

	public:
		enum { _hx_ClassId = 0x328bddfe };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="lime.net.curl.CURLEasy")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"lime.net.curl.CURLEasy"); }

		hx::ObjectPtr< CURLEasy_obj > __new() {
			hx::ObjectPtr< CURLEasy_obj > __this = new CURLEasy_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< CURLEasy_obj > __alloc(hx::Ctx *_hx_ctx) {
			CURLEasy_obj *__this = (CURLEasy_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CURLEasy_obj), false, "lime.net.curl.CURLEasy"));
			*(void **)__this = CURLEasy_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CURLEasy_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("CURLEasy","\x0e","\xb1","\x71","\x80"); }

		static void cleanup(Float handle);
		static ::Dynamic cleanup_dyn();

		static Float duphandle(Float handle);
		static ::Dynamic duphandle_dyn();

		static ::String escape(Float handle,::String url,int length);
		static ::Dynamic escape_dyn();

		static  ::Dynamic getinfo(Float handle,int info);
		static ::Dynamic getinfo_dyn();

		static Float init();
		static ::Dynamic init_dyn();

		static int pause(Float handle,int bitMask);
		static ::Dynamic pause_dyn();

		static int perform(Float handle);
		static ::Dynamic perform_dyn();

		static void reset(Float handle);
		static ::Dynamic reset_dyn();

		static int setopt(Float handle,int option, ::Dynamic parameter);
		static ::Dynamic setopt_dyn();

		static ::String strerror(int code);
		static ::Dynamic strerror_dyn();

		static ::String unescape(Float handle,::String url,int inLength,int outLength);
		static ::Dynamic unescape_dyn();

		static int _hx___writeCallback( ::Dynamic callback, ::Dynamic output,int size,int nmemb);
		static ::Dynamic _hx___writeCallback_dyn();

};

} // end namespace lime
} // end namespace net
} // end namespace curl

#endif /* INCLUDED_lime_net_curl_CURLEasy */ 
