// Generated by Haxe 3.4.0
#ifndef INCLUDED_spritesheet_data_SpritesheetFrame
#define INCLUDED_spritesheet_data_SpritesheetFrame

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_e5ce10f58ea79da9_19_new)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(spritesheet,data,SpritesheetFrame)

namespace spritesheet{
namespace data{


class HXCPP_CLASS_ATTRIBUTES SpritesheetFrame_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SpritesheetFrame_obj OBJ_;
		SpritesheetFrame_obj();

	public:
		enum { _hx_ClassId = 0x0c66124f };

		void __construct(hx::Null< int >  __o_x,hx::Null< int >  __o_y,hx::Null< int >  __o_width,hx::Null< int >  __o_height,hx::Null< int >  __o_offsetX,hx::Null< int >  __o_offsetY);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="spritesheet.data.SpritesheetFrame")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"spritesheet.data.SpritesheetFrame"); }

		hx::ObjectPtr< SpritesheetFrame_obj > __new(hx::Null< int >  __o_x,hx::Null< int >  __o_y,hx::Null< int >  __o_width,hx::Null< int >  __o_height,hx::Null< int >  __o_offsetX,hx::Null< int >  __o_offsetY) {
			hx::ObjectPtr< SpritesheetFrame_obj > __this = new SpritesheetFrame_obj();
			__this->__construct(__o_x,__o_y,__o_width,__o_height,__o_offsetX,__o_offsetY);
			return __this;
		}

		static hx::ObjectPtr< SpritesheetFrame_obj > __alloc(hx::Ctx *_hx_ctx,hx::Null< int >  __o_x,hx::Null< int >  __o_y,hx::Null< int >  __o_width,hx::Null< int >  __o_height,hx::Null< int >  __o_offsetX,hx::Null< int >  __o_offsetY) {
			SpritesheetFrame_obj *__this = (SpritesheetFrame_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SpritesheetFrame_obj), true, "spritesheet.data.SpritesheetFrame"));
			*(void **)__this = SpritesheetFrame_obj::_hx_vtable;
{
int x = __o_x.Default(0);
int y = __o_y.Default(0);
int width = __o_width.Default(0);
int height = __o_height.Default(0);
int offsetX = __o_offsetX.Default(0);
int offsetY = __o_offsetY.Default(0);
            	HX_STACKFRAME(&_hx_pos_e5ce10f58ea79da9_19_new)
HXLINE(  21)		( ( ::spritesheet::data::SpritesheetFrame)(__this) )->x = x;
HXLINE(  22)		( ( ::spritesheet::data::SpritesheetFrame)(__this) )->y = y;
HXLINE(  23)		( ( ::spritesheet::data::SpritesheetFrame)(__this) )->width = width;
HXLINE(  24)		( ( ::spritesheet::data::SpritesheetFrame)(__this) )->height = height;
HXLINE(  25)		( ( ::spritesheet::data::SpritesheetFrame)(__this) )->offsetX = offsetX;
HXLINE(  26)		( ( ::spritesheet::data::SpritesheetFrame)(__this) )->offsetY = offsetY;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SpritesheetFrame_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SpritesheetFrame","\x73","\xf5","\xcf","\xb9"); }

		 ::openfl::display::BitmapData bitmapData;
		int height;
		int offsetX;
		int offsetY;
		int width;
		int x;
		int y;
};

} // end namespace spritesheet
} // end namespace data

#endif /* INCLUDED_spritesheet_data_SpritesheetFrame */ 
