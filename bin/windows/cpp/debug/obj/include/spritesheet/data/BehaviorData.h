// Generated by Haxe 3.4.0
#ifndef INCLUDED_spritesheet_data_BehaviorData
#define INCLUDED_spritesheet_data_BehaviorData

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_fb6b7fa1522877cd_21_new)
HX_DECLARE_CLASS2(spritesheet,data,BehaviorData)

namespace spritesheet{
namespace data{


class HXCPP_CLASS_ATTRIBUTES BehaviorData_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef BehaviorData_obj OBJ_;
		BehaviorData_obj();

	public:
		enum { _hx_ClassId = 0x698b7ea0 };

		void __construct(::String __o_name,::Array< int > frames,hx::Null< bool >  __o_loop,hx::Null< int >  __o_frameRate,hx::Null< Float >  __o_originX,hx::Null< Float >  __o_originY);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="spritesheet.data.BehaviorData")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"spritesheet.data.BehaviorData"); }

		hx::ObjectPtr< BehaviorData_obj > __new(::String __o_name,::Array< int > frames,hx::Null< bool >  __o_loop,hx::Null< int >  __o_frameRate,hx::Null< Float >  __o_originX,hx::Null< Float >  __o_originY) {
			hx::ObjectPtr< BehaviorData_obj > __this = new BehaviorData_obj();
			__this->__construct(__o_name,frames,__o_loop,__o_frameRate,__o_originX,__o_originY);
			return __this;
		}

		static hx::ObjectPtr< BehaviorData_obj > __alloc(hx::Ctx *_hx_ctx,::String __o_name,::Array< int > frames,hx::Null< bool >  __o_loop,hx::Null< int >  __o_frameRate,hx::Null< Float >  __o_originX,hx::Null< Float >  __o_originY) {
			BehaviorData_obj *__this = (BehaviorData_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(BehaviorData_obj), true, "spritesheet.data.BehaviorData"));
			*(void **)__this = BehaviorData_obj::_hx_vtable;
{
::String name = __o_name.Default(HX_HCSTRING("","\x00","\x00","\x00","\x00"));
bool loop = __o_loop.Default(false);
int frameRate = __o_frameRate.Default(30);
Float originX = __o_originX.Default(0);
Float originY = __o_originY.Default(0);
            	HX_STACKFRAME(&_hx_pos_fb6b7fa1522877cd_21_new)
HXLINE(  23)		if ((name == HX_("",00,00,00,00))) {
HXLINE(  25)			name = (HX_("behavior",92,90,92,0a) + ::spritesheet::data::BehaviorData_obj::uniqueID++);
            		}
HXLINE(  29)		if (hx::IsNull( frames )) {
HXLINE(  31)			frames = ::Array_obj< int >::__new(0);
            		}
HXLINE(  35)		( ( ::spritesheet::data::BehaviorData)(__this) )->name = name;
HXLINE(  36)		( ( ::spritesheet::data::BehaviorData)(__this) )->frames = frames;
HXLINE(  37)		( ( ::spritesheet::data::BehaviorData)(__this) )->loop = loop;
HXLINE(  38)		( ( ::spritesheet::data::BehaviorData)(__this) )->frameRate = frameRate;
HXLINE(  39)		( ( ::spritesheet::data::BehaviorData)(__this) )->originX = originX;
HXLINE(  40)		( ( ::spritesheet::data::BehaviorData)(__this) )->originY = originY;
HXLINE(  42)		( ( ::spritesheet::data::BehaviorData)(__this) )->frameData = ::cpp::VirtualArray_obj::__new();
HXLINE(  44)		{
HXLINE(  44)			int _g1 = (int)0;
HXDLIN(  44)			int _g = ( ( ::spritesheet::data::BehaviorData)(__this) )->frames->length;
HXDLIN(  44)			while((_g1 < _g)){
HXLINE(  44)				_g1 = (_g1 + (int)1);
HXDLIN(  44)				int i = (_g1 - (int)1);
HXLINE(  46)				( ( ::spritesheet::data::BehaviorData)(__this) )->frameData->push(null());
            			}
            		}
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~BehaviorData_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("BehaviorData","\xfc","\x0f","\xea","\x74"); }

		static void __boot();
		static int uniqueID;
		::cpp::VirtualArray frameData;
		int frameRate;
		::Array< int > frames;
		bool loop;
		::String name;
		Float originX;
		Float originY;
		 ::spritesheet::data::BehaviorData clone();
		::Dynamic clone_dyn();

};

} // end namespace spritesheet
} // end namespace data

#endif /* INCLUDED_spritesheet_data_BehaviorData */ 
