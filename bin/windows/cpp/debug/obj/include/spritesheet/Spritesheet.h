// Generated by Haxe 3.4.0
#ifndef INCLUDED_spritesheet_Spritesheet
#define INCLUDED_spritesheet_Spritesheet

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,StringMap)
HX_DECLARE_CLASS2(openfl,display,BitmapData)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS1(spritesheet,Spritesheet)
HX_DECLARE_CLASS2(spritesheet,data,BehaviorData)
HX_DECLARE_CLASS2(spritesheet,data,SpritesheetFrame)

namespace spritesheet{


class HXCPP_CLASS_ATTRIBUTES Spritesheet_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Spritesheet_obj OBJ_;
		Spritesheet_obj();

	public:
		enum { _hx_ClassId = 0x640318e0 };

		void __construct( ::openfl::display::BitmapData image,::Array< ::Dynamic> frames, ::haxe::ds::StringMap behaviors, ::openfl::display::BitmapData imageAlpha);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="spritesheet.Spritesheet")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"spritesheet.Spritesheet"); }
		static hx::ObjectPtr< Spritesheet_obj > __new( ::openfl::display::BitmapData image,::Array< ::Dynamic> frames, ::haxe::ds::StringMap behaviors, ::openfl::display::BitmapData imageAlpha);
		static hx::ObjectPtr< Spritesheet_obj > __alloc(hx::Ctx *_hx_ctx, ::openfl::display::BitmapData image,::Array< ::Dynamic> frames, ::haxe::ds::StringMap behaviors, ::openfl::display::BitmapData imageAlpha);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Spritesheet_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Spritesheet","\x5a","\xec","\xc7","\x03"); }

		 ::haxe::ds::StringMap behaviors;
		::String name;
		int totalFrames;
		::Array< ::Dynamic> frames;
		 ::openfl::display::BitmapData sourceImage;
		 ::openfl::display::BitmapData sourceImageAlpha;
		void addBehavior( ::spritesheet::data::BehaviorData behavior);
		::Dynamic addBehavior_dyn();

		void addFrame( ::spritesheet::data::SpritesheetFrame frame);
		::Dynamic addFrame_dyn();

		void generateBitmaps();
		::Dynamic generateBitmaps_dyn();

		void generateBitmap(int index);
		::Dynamic generateBitmap_dyn();

		 ::spritesheet::data::SpritesheetFrame getFrame(int index,hx::Null< bool >  autoGenerate);
		::Dynamic getFrame_dyn();

		::Array< int > getFrameIDs();
		::Dynamic getFrameIDs_dyn();

		::Array< ::Dynamic> getFrames();
		::Dynamic getFrames_dyn();

		::Array< int > merge( ::spritesheet::Spritesheet spritesheet1);
		::Dynamic merge_dyn();

		void updateImage( ::openfl::display::BitmapData image, ::openfl::display::BitmapData imageAlpha);
		::Dynamic updateImage_dyn();

};

} // end namespace spritesheet

#endif /* INCLUDED_spritesheet_Spritesheet */ 
