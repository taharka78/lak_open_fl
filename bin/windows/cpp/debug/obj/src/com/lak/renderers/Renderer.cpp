// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_com_lak_IsoWorld
#include <com/lak/IsoWorld.h>
#endif
#ifndef INCLUDED_com_lak_display_SelectionSprite
#include <com/lak/display/SelectionSprite.h>
#endif
#ifndef INCLUDED_com_lak_entities_IsoObject
#include <com/lak/entities/IsoObject.h>
#endif
#ifndef INCLUDED_com_lak_renderers_Renderer
#include <com/lak/renderers/Renderer.h>
#endif
#ifndef INCLUDED_com_lak_simulator_Simulator
#include <com/lak/simulator/Simulator.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_acaaf2ac425b9813_9_new,"com.lak.renderers.Renderer","new",0x2ea9bf58,"com.lak.renderers.Renderer.new","com/lak/renderers/Renderer.hx",9,0x783990f5)
HX_LOCAL_STACK_FRAME(_hx_pos_acaaf2ac425b9813_26_createEllipse,"com.lak.renderers.Renderer","createEllipse",0xdd8c6e3a,"com.lak.renderers.Renderer.createEllipse","com/lak/renderers/Renderer.hx",26,0x783990f5)
HX_LOCAL_STACK_FRAME(_hx_pos_acaaf2ac425b9813_45_centerPoint,"com.lak.renderers.Renderer","centerPoint",0x6d316133,"com.lak.renderers.Renderer.centerPoint","com/lak/renderers/Renderer.hx",45,0x783990f5)
HX_LOCAL_STACK_FRAME(_hx_pos_acaaf2ac425b9813_50_destroyEllipse,"com.lak.renderers.Renderer","destroyEllipse",0x1919330c,"com.lak.renderers.Renderer.destroyEllipse","com/lak/renderers/Renderer.hx",50,0x783990f5)
HX_LOCAL_STACK_FRAME(_hx_pos_acaaf2ac425b9813_56_run,"com.lak.renderers.Renderer","run",0x2eacd643,"com.lak.renderers.Renderer.run","com/lak/renderers/Renderer.hx",56,0x783990f5)
namespace com{
namespace lak{
namespace renderers{

void Renderer_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_acaaf2ac425b9813_9_new)
HXLINE(  13)		this->canDrawRect = false;
HXLINE(  11)		this->selectionSprt =  ::com::lak::display::SelectionSprite_obj::__alloc( HX_CTX );
HXLINE(  17)		::com::lak::renderers::Renderer_obj::instance = hx::ObjectPtr<OBJ_>(this);
HXLINE(  18)		::com::lak::IsoWorld_obj::instance->addChild(this->selectionSprt);
            	}

Dynamic Renderer_obj::__CreateEmpty() { return new Renderer_obj; }

void *Renderer_obj::_hx_vtable = 0;

Dynamic Renderer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Renderer_obj > _hx_result = new Renderer_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Renderer_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0b24e75e;
}

void Renderer_obj::createEllipse( ::com::lak::entities::IsoObject obj,int color){
            	HX_STACKFRAME(&_hx_pos_acaaf2ac425b9813_26_createEllipse)
HXLINE(  28)		obj->get_graphics()->clear();
HXLINE(  30)		obj->get_graphics()->beginFill(color,null());
HXLINE(  32)		 ::openfl::display::Graphics _hx_tmp = obj->get_graphics();
HXDLIN(  32)		int _hx_tmp1 = ((int)-(::Std_obj::_hx_int(obj->get_width())) >> (int)(int)1);
HXDLIN(  32)		Float _hx_tmp2 = -((obj->get_height() + (int)10));
HXDLIN(  32)		_hx_tmp->drawRect(_hx_tmp1,_hx_tmp2,obj->get_width(),(int)5);
HXLINE(  33)		obj->get_graphics()->endFill();
HXLINE(  35)		obj->get_graphics()->lineStyle((int)2,color,null(),null(),null(),null(),null(),null());
HXLINE(  36)		 ::openfl::display::Graphics _hx_tmp3 = obj->get_graphics();
HXDLIN(  36)		int _hx_tmp4 = ((int)-(::Std_obj::_hx_int(obj->get_width())) >> (int)(int)1);
HXDLIN(  36)		Float _hx_tmp5 = ((Float)-(::Std_obj::_hx_int(obj->get_height())) / (Float)(int)4);
HXDLIN(  36)		Float _hx_tmp6 = obj->get_width();
HXDLIN(  36)		_hx_tmp3->drawEllipse(_hx_tmp4,_hx_tmp5,_hx_tmp6,((int)::Std_obj::_hx_int(obj->get_height()) >> (int)(int)1));
HXLINE(  37)		obj->get_graphics()->endFill();
HXLINE(  38)		this->centerPoint(obj);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Renderer_obj,createEllipse,(void))

void Renderer_obj::centerPoint( ::com::lak::entities::IsoObject obj){
            	HX_STACKFRAME(&_hx_pos_acaaf2ac425b9813_45_centerPoint)
HXLINE(  46)		obj->get_graphics()->beginFill((int)255,null());
HXLINE(  47)		obj->get_graphics()->drawCircle(((Float)-2.5),((Float)-2.5),(int)5);
HXLINE(  48)		obj->get_graphics()->endFill();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Renderer_obj,centerPoint,(void))

void Renderer_obj::destroyEllipse( ::com::lak::entities::IsoObject obj){
            	HX_STACKFRAME(&_hx_pos_acaaf2ac425b9813_50_destroyEllipse)
HXLINE(  51)		obj->get_graphics()->clear();
HXLINE(  52)		this->centerPoint(obj);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Renderer_obj,destroyEllipse,(void))

void Renderer_obj::run(int delta){
            	HX_STACKFRAME(&_hx_pos_acaaf2ac425b9813_56_run)
HXLINE(  57)		if (this->canDrawRect) {
HXLINE(  58)			this->selectionSprt->drawRect();
HXLINE(  59)			::com::lak::simulator::Simulator_obj::instance->checkForSelection();
            		}
HXLINE(  61)		::com::lak::IsoWorld_obj::instance->drawView();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Renderer_obj,run,(void))

 ::com::lak::renderers::Renderer Renderer_obj::instance;


hx::ObjectPtr< Renderer_obj > Renderer_obj::__new() {
	hx::ObjectPtr< Renderer_obj > __this = new Renderer_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Renderer_obj > Renderer_obj::__alloc(hx::Ctx *_hx_ctx) {
	Renderer_obj *__this = (Renderer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Renderer_obj), true, "com.lak.renderers.Renderer"));
	*(void **)__this = Renderer_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Renderer_obj::Renderer_obj()
{
}

void Renderer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Renderer);
	HX_MARK_MEMBER_NAME(selectionSprt,"selectionSprt");
	HX_MARK_MEMBER_NAME(canDrawRect,"canDrawRect");
	HX_MARK_END_CLASS();
}

void Renderer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(selectionSprt,"selectionSprt");
	HX_VISIT_MEMBER_NAME(canDrawRect,"canDrawRect");
}

hx::Val Renderer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"run") ) { return hx::Val( run_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"canDrawRect") ) { return hx::Val( canDrawRect); }
		if (HX_FIELD_EQ(inName,"centerPoint") ) { return hx::Val( centerPoint_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectionSprt") ) { return hx::Val( selectionSprt); }
		if (HX_FIELD_EQ(inName,"createEllipse") ) { return hx::Val( createEllipse_dyn()); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"destroyEllipse") ) { return hx::Val( destroyEllipse_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Renderer_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { outValue = instance; return true; }
	}
	return false;
}

hx::Val Renderer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"canDrawRect") ) { canDrawRect=inValue.Cast< bool >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectionSprt") ) { selectionSprt=inValue.Cast<  ::com::lak::display::SelectionSprite >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Renderer_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"instance") ) { instance=ioValue.Cast<  ::com::lak::renderers::Renderer >(); return true; }
	}
	return false;
}

void Renderer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("selectionSprt","\x0b","\x24","\x9d","\xfc"));
	outFields->push(HX_HCSTRING("canDrawRect","\x78","\xb7","\xb8","\x8f"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Renderer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::com::lak::display::SelectionSprite*/ ,(int)offsetof(Renderer_obj,selectionSprt),HX_HCSTRING("selectionSprt","\x0b","\x24","\x9d","\xfc")},
	{hx::fsBool,(int)offsetof(Renderer_obj,canDrawRect),HX_HCSTRING("canDrawRect","\x78","\xb7","\xb8","\x8f")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Renderer_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::com::lak::renderers::Renderer*/ ,(void *) &Renderer_obj::instance,HX_HCSTRING("instance","\x95","\x1f","\xe1","\x59")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Renderer_obj_sMemberFields[] = {
	HX_HCSTRING("selectionSprt","\x0b","\x24","\x9d","\xfc"),
	HX_HCSTRING("canDrawRect","\x78","\xb7","\xb8","\x8f"),
	HX_HCSTRING("createEllipse","\x42","\x19","\xc9","\xf3"),
	HX_HCSTRING("centerPoint","\x3b","\xba","\x5f","\x98"),
	HX_HCSTRING("destroyEllipse","\x04","\x2f","\xf2","\x77"),
	HX_HCSTRING("run","\x4b","\xe7","\x56","\x00"),
	::String(null()) };

static void Renderer_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Renderer_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Renderer_obj::instance,"instance");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Renderer_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Renderer_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Renderer_obj::instance,"instance");
};

#endif

hx::Class Renderer_obj::__mClass;

static ::String Renderer_obj_sStaticFields[] = {
	HX_HCSTRING("instance","\x95","\x1f","\xe1","\x59"),
	::String(null())
};

void Renderer_obj::__register()
{
	hx::Object *dummy = new Renderer_obj;
	Renderer_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.lak.renderers.Renderer","\x66","\x73","\xd9","\xdf");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Renderer_obj::__GetStatic;
	__mClass->mSetStaticField = &Renderer_obj::__SetStatic;
	__mClass->mMarkFunc = Renderer_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Renderer_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Renderer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Renderer_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Renderer_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Renderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Renderer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace lak
} // end namespace renderers
