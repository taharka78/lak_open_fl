// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_com_lak_controllers_events_MapEvent
#include <com/lak/controllers/events/MapEvent.h>
#endif
#ifndef INCLUDED_openfl_events_Event
#include <openfl/events/Event.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c832e93cfb60825a_15_new,"com.lak.controllers.events.MapEvent","new",0x41198209,"com.lak.controllers.events.MapEvent.new","com/lak/controllers/events/MapEvent.hx",15,0x39572b69)
HX_LOCAL_STACK_FRAME(_hx_pos_c832e93cfb60825a_20_clone,"com.lak.controllers.events.MapEvent","clone",0x8b374146,"com.lak.controllers.events.MapEvent.clone","com/lak/controllers/events/MapEvent.hx",20,0x39572b69)
HX_LOCAL_STACK_FRAME(_hx_pos_c832e93cfb60825a_10_boot,"com.lak.controllers.events.MapEvent","boot",0xad514669,"com.lak.controllers.events.MapEvent.boot","com/lak/controllers/events/MapEvent.hx",10,0x39572b69)
HX_LOCAL_STACK_FRAME(_hx_pos_c832e93cfb60825a_11_boot,"com.lak.controllers.events.MapEvent","boot",0xad514669,"com.lak.controllers.events.MapEvent.boot","com/lak/controllers/events/MapEvent.hx",11,0x39572b69)
namespace com{
namespace lak{
namespace controllers{
namespace events{

void MapEvent_obj::__construct(::String ype, ::Dynamic _dataObj){
            	HX_STACKFRAME(&_hx_pos_c832e93cfb60825a_15_new)
HXLINE(  16)		this->dataObj = _dataObj;
HXLINE(  17)		super::__construct(this->type,false,false);
            	}

Dynamic MapEvent_obj::__CreateEmpty() { return new MapEvent_obj; }

void *MapEvent_obj::_hx_vtable = 0;

Dynamic MapEvent_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MapEvent_obj > _hx_result = new MapEvent_obj();
	_hx_result->__construct(inArgs[0],inArgs[1]);
	return _hx_result;
}

bool MapEvent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0b6b4951) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x0b6b4951;
	} else {
		return inClassId==(int)0x3243040d;
	}
}

 ::openfl::events::Event MapEvent_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_c832e93cfb60825a_20_clone)
HXLINE(  20)		return  ::com::lak::controllers::events::MapEvent_obj::__alloc( HX_CTX ,this->type,this->dataObj);
            	}


::String MapEvent_obj::SETUP_WORLD;

::String MapEvent_obj::INIT;


hx::ObjectPtr< MapEvent_obj > MapEvent_obj::__new(::String ype, ::Dynamic _dataObj) {
	hx::ObjectPtr< MapEvent_obj > __this = new MapEvent_obj();
	__this->__construct(ype,_dataObj);
	return __this;
}

hx::ObjectPtr< MapEvent_obj > MapEvent_obj::__alloc(hx::Ctx *_hx_ctx,::String ype, ::Dynamic _dataObj) {
	MapEvent_obj *__this = (MapEvent_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MapEvent_obj), true, "com.lak.controllers.events.MapEvent"));
	*(void **)__this = MapEvent_obj::_hx_vtable;
	__this->__construct(ype,_dataObj);
	return __this;
}

MapEvent_obj::MapEvent_obj()
{
}

void MapEvent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MapEvent);
	HX_MARK_MEMBER_NAME(dataObj,"dataObj");
	 ::openfl::events::Event_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void MapEvent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(dataObj,"dataObj");
	 ::openfl::events::Event_obj::__Visit(HX_VISIT_ARG);
}

hx::Val MapEvent_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"dataObj") ) { return hx::Val( dataObj); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val MapEvent_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"dataObj") ) { dataObj=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MapEvent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("dataObj","\xed","\xa7","\xd5","\x11"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MapEvent_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(MapEvent_obj,dataObj),HX_HCSTRING("dataObj","\xed","\xa7","\xd5","\x11")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo MapEvent_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &MapEvent_obj::SETUP_WORLD,HX_HCSTRING("SETUP_WORLD","\x90","\x9f","\x14","\x18")},
	{hx::fsString,(void *) &MapEvent_obj::INIT,HX_HCSTRING("INIT","\x10","\x03","\x7c","\x30")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String MapEvent_obj_sMemberFields[] = {
	HX_HCSTRING("dataObj","\xed","\xa7","\xd5","\x11"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	::String(null()) };

static void MapEvent_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MapEvent_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(MapEvent_obj::SETUP_WORLD,"SETUP_WORLD");
	HX_MARK_MEMBER_NAME(MapEvent_obj::INIT,"INIT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MapEvent_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MapEvent_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(MapEvent_obj::SETUP_WORLD,"SETUP_WORLD");
	HX_VISIT_MEMBER_NAME(MapEvent_obj::INIT,"INIT");
};

#endif

hx::Class MapEvent_obj::__mClass;

static ::String MapEvent_obj_sStaticFields[] = {
	HX_HCSTRING("SETUP_WORLD","\x90","\x9f","\x14","\x18"),
	HX_HCSTRING("INIT","\x10","\x03","\x7c","\x30"),
	::String(null())
};

void MapEvent_obj::__register()
{
	hx::Object *dummy = new MapEvent_obj;
	MapEvent_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.lak.controllers.events.MapEvent","\x97","\xc9","\xc3","\x88");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MapEvent_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MapEvent_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MapEvent_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MapEvent_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MapEvent_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MapEvent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MapEvent_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void MapEvent_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_c832e93cfb60825a_10_boot)
HXLINE(  10)		SETUP_WORLD = HX_("setupWorld",95,b2,67,b0);
            	}
{
            	HX_STACKFRAME(&_hx_pos_c832e93cfb60825a_11_boot)
HXLINE(  11)		INIT = HX_("init",10,3b,bb,45);
            	}
}

} // end namespace com
} // end namespace lak
} // end namespace controllers
} // end namespace events
