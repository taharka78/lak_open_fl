// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_com_lak_controllers_GameStateController
#include <com/lak/controllers/GameStateController.h>
#endif
#ifndef INCLUDED_com_lak_display_SelectionSprite
#include <com/lak/display/SelectionSprite.h>
#endif
#ifndef INCLUDED_com_lak_renderers_Renderer
#include <com/lak/renderers/Renderer.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_Graphics
#include <openfl/display/Graphics.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_fb87ee4f7401beb6_12_enableSelection,"com.lak.controllers.GameStateController","enableSelection",0xb63d649a,"com.lak.controllers.GameStateController.enableSelection","com/lak/controllers/GameStateController.hx",12,0x93195c22)
HX_LOCAL_STACK_FRAME(_hx_pos_fb87ee4f7401beb6_14_disabledSelection,"com.lak.controllers.GameStateController","disabledSelection",0xea3960c1,"com.lak.controllers.GameStateController.disabledSelection","com/lak/controllers/GameStateController.hx",14,0x93195c22)
namespace com{
namespace lak{
namespace controllers{

void GameStateController_obj::__construct() { }

Dynamic GameStateController_obj::__CreateEmpty() { return new GameStateController_obj; }

void *GameStateController_obj::_hx_vtable = 0;

Dynamic GameStateController_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GameStateController_obj > _hx_result = new GameStateController_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GameStateController_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x333d4ebd;
}

void GameStateController_obj::enableSelection(){
            	HX_STACKFRAME(&_hx_pos_fb87ee4f7401beb6_12_enableSelection)
HXLINE(  12)		::com::lak::renderers::Renderer_obj::instance->canDrawRect = true;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameStateController_obj,enableSelection,(void))

void GameStateController_obj::disabledSelection(){
            	HX_STACKFRAME(&_hx_pos_fb87ee4f7401beb6_14_disabledSelection)
HXLINE(  15)		::com::lak::renderers::Renderer_obj::instance->selectionSprt->get_graphics()->clear();
HXLINE(  16)		::com::lak::renderers::Renderer_obj::instance->canDrawRect = false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GameStateController_obj,disabledSelection,(void))


GameStateController_obj::GameStateController_obj()
{
}

bool GameStateController_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 15:
		if (HX_FIELD_EQ(inName,"enableSelection") ) { outValue = enableSelection_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"disabledSelection") ) { outValue = disabledSelection_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *GameStateController_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *GameStateController_obj_sStaticStorageInfo = 0;
#endif

static void GameStateController_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GameStateController_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GameStateController_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GameStateController_obj::__mClass,"__mClass");
};

#endif

hx::Class GameStateController_obj::__mClass;

static ::String GameStateController_obj_sStaticFields[] = {
	HX_HCSTRING("enableSelection","\x49","\xc1","\x1b","\x72"),
	HX_HCSTRING("disabledSelection","\x30","\x87","\xeb","\x1f"),
	::String(null())
};

void GameStateController_obj::__register()
{
	hx::Object *dummy = new GameStateController_obj;
	GameStateController_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.lak.controllers.GameStateController","\xbf","\x91","\x9e","\x0f");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GameStateController_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = GameStateController_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GameStateController_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GameStateController_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GameStateController_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GameStateController_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GameStateController_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace lak
} // end namespace controllers
