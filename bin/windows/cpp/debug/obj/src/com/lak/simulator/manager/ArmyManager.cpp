// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_com_lak_entities_IsoObject
#include <com/lak/entities/IsoObject.h>
#endif
#ifndef INCLUDED_com_lak_entities_IsoUnit
#include <com/lak/entities/IsoUnit.h>
#endif
#ifndef INCLUDED_com_lak_renderers_Renderer
#include <com/lak/renderers/Renderer.h>
#endif
#ifndef INCLUDED_com_lak_simulator_manager_ArmyManager
#include <com/lak/simulator/manager/ArmyManager.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_bf5ffd97d0dfebe7_10_new,"com.lak.simulator.manager.ArmyManager","new",0xb147c6b2,"com.lak.simulator.manager.ArmyManager.new","com/lak/simulator/manager/ArmyManager.hx",10,0x4d7d5a02)
HX_LOCAL_STACK_FRAME(_hx_pos_bf5ffd97d0dfebe7_19_selectUnit,"com.lak.simulator.manager.ArmyManager","selectUnit",0x2b84978e,"com.lak.simulator.manager.ArmyManager.selectUnit","com/lak/simulator/manager/ArmyManager.hx",19,0x4d7d5a02)
HX_LOCAL_STACK_FRAME(_hx_pos_bf5ffd97d0dfebe7_23_deselectUnits,"com.lak.simulator.manager.ArmyManager","deselectUnits",0xb10b83c4,"com.lak.simulator.manager.ArmyManager.deselectUnits","com/lak/simulator/manager/ArmyManager.hx",23,0x4d7d5a02)
namespace com{
namespace lak{
namespace simulator{
namespace manager{

void ArmyManager_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_bf5ffd97d0dfebe7_10_new)
HXLINE(  10)		this->selectedUnits = ::Array_obj< ::Dynamic>::__new();
            	}

Dynamic ArmyManager_obj::__CreateEmpty() { return new ArmyManager_obj; }

void *ArmyManager_obj::_hx_vtable = 0;

Dynamic ArmyManager_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ArmyManager_obj > _hx_result = new ArmyManager_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ArmyManager_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x042557ae;
}

void ArmyManager_obj::selectUnit( ::com::lak::entities::IsoUnit _unit){
            	HX_STACKFRAME(&_hx_pos_bf5ffd97d0dfebe7_19_selectUnit)
HXLINE(  19)		if ((this->selectedUnits->indexOf(_unit,null()) == (int)-1)) {
HXLINE(  20)			this->selectedUnits->push(_unit);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ArmyManager_obj,selectUnit,(void))

void ArmyManager_obj::deselectUnits(){
            	HX_STACKFRAME(&_hx_pos_bf5ffd97d0dfebe7_23_deselectUnits)
HXLINE(  24)		{
HXLINE(  24)			int _g1 = (int)0;
HXDLIN(  24)			int _g = this->selectedUnits->length;
HXDLIN(  24)			while((_g1 < _g)){
HXLINE(  24)				_g1 = (_g1 + (int)1);
HXDLIN(  24)				int i = (_g1 - (int)1);
HXLINE(  25)				 ::com::lak::renderers::Renderer _hx_tmp = ::com::lak::renderers::Renderer_obj::instance;
HXDLIN(  25)				_hx_tmp->destroyEllipse(this->selectedUnits->__get(i).StaticCast<  ::com::lak::entities::IsoUnit >());
            			}
            		}
HXLINE(  27)		this->selectedUnits = ::Array_obj< ::Dynamic>::__new();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ArmyManager_obj,deselectUnits,(void))


hx::ObjectPtr< ArmyManager_obj > ArmyManager_obj::__new() {
	hx::ObjectPtr< ArmyManager_obj > __this = new ArmyManager_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< ArmyManager_obj > ArmyManager_obj::__alloc(hx::Ctx *_hx_ctx) {
	ArmyManager_obj *__this = (ArmyManager_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ArmyManager_obj), true, "com.lak.simulator.manager.ArmyManager"));
	*(void **)__this = ArmyManager_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

ArmyManager_obj::ArmyManager_obj()
{
}

void ArmyManager_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ArmyManager);
	HX_MARK_MEMBER_NAME(selectedUnits,"selectedUnits");
	HX_MARK_END_CLASS();
}

void ArmyManager_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(selectedUnits,"selectedUnits");
}

hx::Val ArmyManager_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 10:
		if (HX_FIELD_EQ(inName,"selectUnit") ) { return hx::Val( selectUnit_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"selectedUnits") ) { return hx::Val( selectedUnits); }
		if (HX_FIELD_EQ(inName,"deselectUnits") ) { return hx::Val( deselectUnits_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ArmyManager_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 13:
		if (HX_FIELD_EQ(inName,"selectedUnits") ) { selectedUnits=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ArmyManager_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("selectedUnits","\x14","\x45","\x29","\x9d"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ArmyManager_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(ArmyManager_obj,selectedUnits),HX_HCSTRING("selectedUnits","\x14","\x45","\x29","\x9d")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ArmyManager_obj_sStaticStorageInfo = 0;
#endif

static ::String ArmyManager_obj_sMemberFields[] = {
	HX_HCSTRING("selectedUnits","\x14","\x45","\x29","\x9d"),
	HX_HCSTRING("selectUnit","\xa0","\x3f","\x45","\xbc"),
	HX_HCSTRING("deselectUnits","\xf2","\xb2","\x09","\x30"),
	::String(null()) };

static void ArmyManager_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ArmyManager_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ArmyManager_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ArmyManager_obj::__mClass,"__mClass");
};

#endif

hx::Class ArmyManager_obj::__mClass;

void ArmyManager_obj::__register()
{
	hx::Object *dummy = new ArmyManager_obj;
	ArmyManager_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("com.lak.simulator.manager.ArmyManager","\xc0","\x45","\x96","\x5c");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ArmyManager_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ArmyManager_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ArmyManager_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ArmyManager_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ArmyManager_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ArmyManager_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace com
} // end namespace lak
} // end namespace simulator
} // end namespace manager
