// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_lime_graphics_opengl_GLObject
#include <lime/graphics/opengl/GLObject.h>
#endif
#ifndef INCLUDED_lime_graphics_opengl__GLSync_GLSync_Impl_
#include <lime/graphics/opengl/_GLSync/GLSync_Impl_.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5a91c0e355d3499d_14_fromInt,"lime.graphics.opengl._GLSync.GLSync_Impl_","fromInt",0x886e183b,"lime.graphics.opengl._GLSync.GLSync_Impl_.fromInt","lime/graphics/opengl/GLSync.hx",14,0x71f85508)
namespace lime{
namespace graphics{
namespace opengl{
namespace _GLSync{

void GLSync_Impl__obj::__construct() { }

Dynamic GLSync_Impl__obj::__CreateEmpty() { return new GLSync_Impl__obj; }

void *GLSync_Impl__obj::_hx_vtable = 0;

Dynamic GLSync_Impl__obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< GLSync_Impl__obj > _hx_result = new GLSync_Impl__obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GLSync_Impl__obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x548ac090;
}

 ::lime::graphics::opengl::GLObject GLSync_Impl__obj::fromInt(int id){
            	HX_STACKFRAME(&_hx_pos_5a91c0e355d3499d_14_fromInt)
HXLINE(  14)		return ::lime::graphics::opengl::GLObject_obj::fromInt((int)10,id);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GLSync_Impl__obj,fromInt,return )


GLSync_Impl__obj::GLSync_Impl__obj()
{
}

bool GLSync_Impl__obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"fromInt") ) { outValue = fromInt_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *GLSync_Impl__obj_sMemberStorageInfo = 0;
static hx::StaticInfo *GLSync_Impl__obj_sStaticStorageInfo = 0;
#endif

static void GLSync_Impl__obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GLSync_Impl__obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GLSync_Impl__obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GLSync_Impl__obj::__mClass,"__mClass");
};

#endif

hx::Class GLSync_Impl__obj::__mClass;

static ::String GLSync_Impl__obj_sStaticFields[] = {
	HX_HCSTRING("fromInt","\xa5","\xdd","\xfa","\x57"),
	::String(null())
};

void GLSync_Impl__obj::__register()
{
	hx::Object *dummy = new GLSync_Impl__obj;
	GLSync_Impl__obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.graphics.opengl._GLSync.GLSync_Impl_","\x04","\x15","\x00","\xd0");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GLSync_Impl__obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = GLSync_Impl__obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(GLSync_Impl__obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< GLSync_Impl__obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GLSync_Impl__obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GLSync_Impl__obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GLSync_Impl__obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace lime
} // end namespace graphics
} // end namespace opengl
} // end namespace _GLSync
