// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_lime__backend_native_NativeApplication
#include <lime/_backend/native/NativeApplication.h>
#endif
#ifndef INCLUDED_lime_app_Application
#include <lime/app/Application.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_lime_app_Module
#include <lime/app/Module.h>
#endif
#ifndef INCLUDED_lime_app_Preloader
#include <lime/app/Preloader.h>
#endif
#ifndef INCLUDED_lime_app__Event_Int_Void
#include <lime/app/_Event_Int_Void.h>
#endif
#ifndef INCLUDED_lime_app__Event_Void_Void
#include <lime/app/_Event_Void_Void.h>
#endif
#ifndef INCLUDED_lime_graphics_Renderer
#include <lime/graphics/Renderer.h>
#endif
#ifndef INCLUDED_lime_system_System
#include <lime/system/System.h>
#endif
#ifndef INCLUDED_lime_ui_Window
#include <lime/ui/Window.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_da4fb7bee4c62773_29_new,"lime.app.Application","new",0x9354427c,"lime.app.Application.new","lime/app/Application.hx",29,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_aca430172aa84436_94___init__,"::lime::app::Application_obj","__init__",0x5d7d4402,"::lime::app::Application_obj.__init__","lime/app/Application.hx",94,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_126_addModule,"lime.app.Application","addModule",0x673258c9,"lime.app.Application.addModule","lime/app/Application.hx",126,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_161_addRenderer,"lime.app.Application","addRenderer",0x0a61eaa0,"lime.app.Application.addRenderer","lime/app/Application.hx",161,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_180_create,"lime.app.Application","create",0x35e42e60,"lime.app.Application.create","lime/app/Application.hx",180,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_231_createWindow,"lime.app.Application","createWindow",0xb3683e70,"lime.app.Application.createWindow","lime/app/Application.hx",231,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_263_exec,"lime.app.Application","exec",0x508159f5,"lime.app.Application.exec","lime/app/Application.hx",263,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_274_onModuleExit,"lime.app.Application","onModuleExit",0x4a2a2a4d,"lime.app.Application.onModuleExit","lime/app/Application.hx",274,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_281_onWindowClose,"lime.app.Application","onWindowClose",0x133677e5,"lime.app.Application.onWindowClose","lime/app/Application.hx",281,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_292_removeModule,"lime.app.Application","removeModule",0x6e873a74,"lime.app.Application.removeModule","lime/app/Application.hx",292,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_304_removeWindow,"lime.app.Application","removeWindow",0x004099b8,"lime.app.Application.removeWindow","lime/app/Application.hx",304,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_333_setPreloader,"lime.app.Application","setPreloader",0xe5520ed8,"lime.app.Application.setPreloader","lime/app/Application.hx",333,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_355_get_frameRate,"lime.app.Application","get_frameRate",0x719f92a0,"lime.app.Application.get_frameRate","lime/app/Application.hx",355,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_362_set_frameRate,"lime.app.Application","set_frameRate",0xb6a574ac,"lime.app.Application.set_frameRate","lime/app/Application.hx",362,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_369_get_preloader,"lime.app.Application","get_preloader",0xbaf66569,"lime.app.Application.get_preloader","lime/app/Application.hx",369,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_376_get_renderer,"lime.app.Application","get_renderer",0xa67be3b0,"lime.app.Application.get_renderer","lime/app/Application.hx",376,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_383_get_renderers,"lime.app.Application","get_renderers",0x05eb56c3,"lime.app.Application.get_renderers","lime/app/Application.hx",383,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_390_get_window,"lime.app.Application","get_window",0xc86a4d1d,"lime.app.Application.get_window","lime/app/Application.hx",390,0x8bc55476)
HX_LOCAL_STACK_FRAME(_hx_pos_da4fb7bee4c62773_397_get_windows,"lime.app.Application","get_windows",0x94992cb6,"lime.app.Application.get_windows","lime/app/Application.hx",397,0x8bc55476)
namespace lime{
namespace app{

void Application_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_da4fb7bee4c62773_29_new)
HXLINE(  64)		this->onUpdate =  ::lime::app::_Event_Int_Void_obj::__alloc( HX_CTX );
HXLINE( 104)		super::__construct();
HXLINE( 106)		if (hx::IsNull( ::lime::app::Application_obj::current )) {
HXLINE( 108)			::lime::app::Application_obj::current = hx::ObjectPtr<OBJ_>(this);
            		}
HXLINE( 112)		this->modules = ::Array_obj< ::Dynamic>::__new();
HXLINE( 113)		this->windowByID =  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
HXLINE( 115)		this->backend =  ::lime::_backend::native::NativeApplication_obj::__alloc( HX_CTX ,hx::ObjectPtr<OBJ_>(this));
HXLINE( 117)		this->registerModule(hx::ObjectPtr<OBJ_>(this));
            	}

Dynamic Application_obj::__CreateEmpty() { return new Application_obj; }

void *Application_obj::_hx_vtable = 0;

Dynamic Application_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Application_obj > _hx_result = new Application_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Application_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x31cfae44) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x31cfae44;
	} else {
		return inClassId==(int)0x77491638;
	}
}

void Application_obj::__init__(){
            	HX_STACKFRAME(&_hx_pos_aca430172aa84436_94___init__)
HXLINE(  94)		 ::Dynamic init = hx::ClassOf< ::lime::_backend::native::NativeApplication >();
            	}


void Application_obj::addModule(::Dynamic module){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_126_addModule)
HXLINE( 128)		::lime::app::IModule_obj::registerModule(module,hx::ObjectPtr<OBJ_>(this));
HXLINE( 129)		this->modules->push(module);
HXLINE( 131)		if ((this->_hx___renderers->length > (int)0)) {
HXLINE( 133)			int _g = (int)0;
HXDLIN( 133)			::Array< ::Dynamic> _g1 = this->_hx___renderers;
HXDLIN( 133)			while((_g < _g1->length)){
HXLINE( 133)				 ::lime::graphics::Renderer renderer = _g1->__get(_g).StaticCast<  ::lime::graphics::Renderer >();
HXDLIN( 133)				_g = (_g + (int)1);
HXLINE( 135)				::lime::app::IModule_obj::addRenderer(module,renderer);
            			}
            		}
HXLINE( 141)		if ((this->_hx___windows->length > (int)0)) {
HXLINE( 143)			int _g2 = (int)0;
HXDLIN( 143)			::Array< ::Dynamic> _g11 = this->_hx___windows;
HXDLIN( 143)			while((_g2 < _g11->length)){
HXLINE( 143)				 ::lime::ui::Window window = _g11->__get(_g2).StaticCast<  ::lime::ui::Window >();
HXDLIN( 143)				_g2 = (_g2 + (int)1);
HXLINE( 145)				::lime::app::IModule_obj::addWindow(module,window);
            			}
            		}
HXLINE( 151)		::lime::app::IModule_obj::setPreloader(module,this->_hx___preloader);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,addModule,(void))

void Application_obj::addRenderer( ::lime::graphics::Renderer renderer){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_161_addRenderer)
HXLINE( 163)		this->super::addRenderer(renderer);
HXLINE( 165)		{
HXLINE( 165)			int _g = (int)0;
HXDLIN( 165)			::Array< ::Dynamic> _g1 = this->modules;
HXDLIN( 165)			while((_g < _g1->length)){
HXLINE( 165)				::Dynamic module = _g1->__get(_g);
HXDLIN( 165)				_g = (_g + (int)1);
HXLINE( 167)				::lime::app::IModule_obj::addRenderer(module,renderer);
            			}
            		}
            	}


void Application_obj::create( ::Dynamic config){
            	HX_GC_STACKFRAME(&_hx_pos_da4fb7bee4c62773_180_create)
HXLINE( 182)		this->config = config;
HXLINE( 184)		this->backend->create(config);
HXLINE( 186)		if (hx::IsNotNull( config )) {
HXLINE( 188)			if (::Reflect_obj::hasField(config,HX_("fps",e9,c7,4d,00))) {
HXLINE( 190)				this->backend->setFrameRate(( (Float)(config->__Field(HX_("fps",e9,c7,4d,00),hx::paccDynamic)) ));
            			}
HXLINE( 194)			if (::Reflect_obj::hasField(config,HX_("windows",83,de,74,e8))) {
HXLINE( 196)				int _g = (int)0;
HXDLIN( 196)				::Array< ::Dynamic> _g1 = ( (::Array< ::Dynamic>)(config->__Field(HX_("windows",83,de,74,e8),hx::paccDynamic)) );
HXDLIN( 196)				while((_g < _g1->length)){
HXLINE( 196)					 ::Dynamic windowConfig = _g1->__get(_g);
HXDLIN( 196)					_g = (_g + (int)1);
HXLINE( 198)					 ::lime::ui::Window window =  ::lime::ui::Window_obj::__alloc( HX_CTX ,windowConfig);
HXLINE( 199)					this->createWindow(window);
            				}
            			}
HXLINE( 209)			bool _hx_tmp;
HXDLIN( 209)			if (hx::IsNotNull( this->_hx___preloader )) {
HXLINE( 209)				_hx_tmp = this->_hx___preloader->complete;
            			}
            			else {
HXLINE( 209)				_hx_tmp = true;
            			}
HXDLIN( 209)			if (_hx_tmp) {
HXLINE( 211)				this->setPreloader(this->_hx___preloader);
HXLINE( 213)				{
HXLINE( 213)					int _g2 = (int)0;
HXDLIN( 213)					::Array< ::Dynamic> _g11 = this->modules;
HXDLIN( 213)					while((_g2 < _g11->length)){
HXLINE( 213)						::Dynamic module = _g11->__get(_g2);
HXDLIN( 213)						_g2 = (_g2 + (int)1);
HXLINE( 215)						this->setPreloader(this->_hx___preloader);
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,create,(void))

void Application_obj::createWindow( ::lime::ui::Window window){
            	HX_GC_STACKFRAME(&_hx_pos_da4fb7bee4c62773_231_createWindow)
HXLINE( 233)		this->super::addWindow(window);
HXLINE( 235)		{
HXLINE( 235)			int _g = (int)0;
HXDLIN( 235)			::Array< ::Dynamic> _g1 = this->modules;
HXDLIN( 235)			while((_g < _g1->length)){
HXLINE( 235)				::Dynamic module = _g1->__get(_g);
HXDLIN( 235)				_g = (_g + (int)1);
HXLINE( 237)				::lime::app::IModule_obj::addWindow(module,window);
            			}
            		}
HXLINE( 241)		if (hx::IsNull( window->renderer )) {
HXLINE( 243)			 ::lime::graphics::Renderer renderer =  ::lime::graphics::Renderer_obj::__alloc( HX_CTX ,window);
HXLINE( 244)			this->addRenderer(renderer);
            		}
HXLINE( 248)		window->create(hx::ObjectPtr<OBJ_>(this));
HXLINE( 250)		this->windowByID->set(window->id,window);
HXLINE( 252)		window->onCreate->dispatch();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,createWindow,(void))

int Application_obj::exec(){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_263_exec)
HXLINE( 265)		::lime::app::Application_obj::current = hx::ObjectPtr<OBJ_>(this);
HXLINE( 267)		return this->backend->exec();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,exec,return )

void Application_obj::onModuleExit(int code){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_274_onModuleExit)
HXLINE( 274)		this->backend->exit();
            	}


void Application_obj::onWindowClose( ::lime::ui::Window window){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_281_onWindowClose)
HXLINE( 281)		this->removeWindow(window);
            	}


void Application_obj::removeModule(::Dynamic module){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_292_removeModule)
HXLINE( 292)		if (hx::IsNotNull( module )) {
HXLINE( 294)			::lime::app::IModule_obj::unregisterModule(module,hx::ObjectPtr<OBJ_>(this));
HXLINE( 295)			this->modules->remove(module);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,removeModule,(void))

void Application_obj::removeWindow( ::lime::ui::Window window){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_304_removeWindow)
HXLINE( 304)		bool _hx_tmp;
HXDLIN( 304)		if (hx::IsNotNull( window )) {
HXLINE( 304)			_hx_tmp = this->windowByID->exists(window->id);
            		}
            		else {
HXLINE( 304)			_hx_tmp = false;
            		}
HXDLIN( 304)		if (_hx_tmp) {
HXLINE( 306)			this->_hx___windows->remove(window);
HXLINE( 307)			this->windowByID->remove(window->id);
HXLINE( 308)			window->close();
HXLINE( 310)			if (hx::IsNotNull( window->renderer )) {
HXLINE( 312)				this->removeRenderer(window->renderer);
            			}
HXLINE( 316)			if (hx::IsEq( this->_hx___windows->__get((int)0).StaticCast<  ::lime::ui::Window >(),window )) {
HXLINE( 318)				this->window = null();
            			}
HXLINE( 322)			if ((this->_hx___windows->length == (int)0)) {
HXLINE( 324)				::lime::_hx_system::System_obj::exit((int)0);
            			}
            		}
            	}


void Application_obj::setPreloader( ::lime::app::Preloader preloader){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_333_setPreloader)
HXLINE( 335)		this->super::setPreloader(preloader);
HXLINE( 337)		{
HXLINE( 337)			int _g = (int)0;
HXDLIN( 337)			::Array< ::Dynamic> _g1 = this->modules;
HXDLIN( 337)			while((_g < _g1->length)){
HXLINE( 337)				::Dynamic module = _g1->__get(_g);
HXDLIN( 337)				_g = (_g + (int)1);
HXLINE( 339)				::lime::app::IModule_obj::setPreloader(module,preloader);
            			}
            		}
            	}


Float Application_obj::get_frameRate(){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_355_get_frameRate)
HXLINE( 355)		return this->backend->getFrameRate();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_frameRate,return )

Float Application_obj::set_frameRate(Float value){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_362_set_frameRate)
HXLINE( 362)		return this->backend->setFrameRate(value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Application_obj,set_frameRate,return )

 ::lime::app::Preloader Application_obj::get_preloader(){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_369_get_preloader)
HXLINE( 369)		return this->_hx___preloader;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_preloader,return )

 ::lime::graphics::Renderer Application_obj::get_renderer(){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_376_get_renderer)
HXLINE( 376)		return this->_hx___renderers->__get((int)0).StaticCast<  ::lime::graphics::Renderer >();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_renderer,return )

::Array< ::Dynamic> Application_obj::get_renderers(){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_383_get_renderers)
HXLINE( 383)		return this->_hx___renderers;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_renderers,return )

 ::lime::ui::Window Application_obj::get_window(){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_390_get_window)
HXLINE( 390)		return this->_hx___windows->__get((int)0).StaticCast<  ::lime::ui::Window >();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_window,return )

::Array< ::Dynamic> Application_obj::get_windows(){
            	HX_STACKFRAME(&_hx_pos_da4fb7bee4c62773_397_get_windows)
HXLINE( 397)		return this->_hx___windows;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Application_obj,get_windows,return )

 ::lime::app::Application Application_obj::current;


hx::ObjectPtr< Application_obj > Application_obj::__new() {
	hx::ObjectPtr< Application_obj > __this = new Application_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Application_obj > Application_obj::__alloc(hx::Ctx *_hx_ctx) {
	Application_obj *__this = (Application_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Application_obj), true, "lime.app.Application"));
	*(void **)__this = Application_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Application_obj::Application_obj()
{
}

void Application_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Application);
	HX_MARK_MEMBER_NAME(config,"config");
	HX_MARK_MEMBER_NAME(modules,"modules");
	HX_MARK_MEMBER_NAME(preloader,"preloader");
	HX_MARK_MEMBER_NAME(onUpdate,"onUpdate");
	HX_MARK_MEMBER_NAME(renderer,"renderer");
	HX_MARK_MEMBER_NAME(renderers,"renderers");
	HX_MARK_MEMBER_NAME(window,"window");
	HX_MARK_MEMBER_NAME(windows,"windows");
	HX_MARK_MEMBER_NAME(backend,"backend");
	HX_MARK_MEMBER_NAME(windowByID,"windowByID");
	 ::lime::app::Module_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void Application_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(config,"config");
	HX_VISIT_MEMBER_NAME(modules,"modules");
	HX_VISIT_MEMBER_NAME(preloader,"preloader");
	HX_VISIT_MEMBER_NAME(onUpdate,"onUpdate");
	HX_VISIT_MEMBER_NAME(renderer,"renderer");
	HX_VISIT_MEMBER_NAME(renderers,"renderers");
	HX_VISIT_MEMBER_NAME(window,"window");
	HX_VISIT_MEMBER_NAME(windows,"windows");
	HX_VISIT_MEMBER_NAME(backend,"backend");
	HX_VISIT_MEMBER_NAME(windowByID,"windowByID");
	 ::lime::app::Module_obj::__Visit(HX_VISIT_ARG);
}

hx::Val Application_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"exec") ) { return hx::Val( exec_dyn()); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"config") ) { return hx::Val( config); }
		if (HX_FIELD_EQ(inName,"window") ) { return hx::Val( inCallProp == hx::paccAlways ? get_window() : window); }
		if (HX_FIELD_EQ(inName,"create") ) { return hx::Val( create_dyn()); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"modules") ) { return hx::Val( modules); }
		if (HX_FIELD_EQ(inName,"windows") ) { return hx::Val( inCallProp == hx::paccAlways ? get_windows() : windows); }
		if (HX_FIELD_EQ(inName,"backend") ) { return hx::Val( backend); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onUpdate") ) { return hx::Val( onUpdate); }
		if (HX_FIELD_EQ(inName,"renderer") ) { return hx::Val( inCallProp == hx::paccAlways ? get_renderer() : renderer); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameRate") ) { if (inCallProp == hx::paccAlways) return hx::Val(get_frameRate()); }
		if (HX_FIELD_EQ(inName,"preloader") ) { return hx::Val( inCallProp == hx::paccAlways ? get_preloader() : preloader); }
		if (HX_FIELD_EQ(inName,"renderers") ) { return hx::Val( inCallProp == hx::paccAlways ? get_renderers() : renderers); }
		if (HX_FIELD_EQ(inName,"addModule") ) { return hx::Val( addModule_dyn()); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"windowByID") ) { return hx::Val( windowByID); }
		if (HX_FIELD_EQ(inName,"get_window") ) { return hx::Val( get_window_dyn()); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"addRenderer") ) { return hx::Val( addRenderer_dyn()); }
		if (HX_FIELD_EQ(inName,"get_windows") ) { return hx::Val( get_windows_dyn()); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createWindow") ) { return hx::Val( createWindow_dyn()); }
		if (HX_FIELD_EQ(inName,"onModuleExit") ) { return hx::Val( onModuleExit_dyn()); }
		if (HX_FIELD_EQ(inName,"removeModule") ) { return hx::Val( removeModule_dyn()); }
		if (HX_FIELD_EQ(inName,"removeWindow") ) { return hx::Val( removeWindow_dyn()); }
		if (HX_FIELD_EQ(inName,"setPreloader") ) { return hx::Val( setPreloader_dyn()); }
		if (HX_FIELD_EQ(inName,"get_renderer") ) { return hx::Val( get_renderer_dyn()); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"onWindowClose") ) { return hx::Val( onWindowClose_dyn()); }
		if (HX_FIELD_EQ(inName,"get_frameRate") ) { return hx::Val( get_frameRate_dyn()); }
		if (HX_FIELD_EQ(inName,"set_frameRate") ) { return hx::Val( set_frameRate_dyn()); }
		if (HX_FIELD_EQ(inName,"get_preloader") ) { return hx::Val( get_preloader_dyn()); }
		if (HX_FIELD_EQ(inName,"get_renderers") ) { return hx::Val( get_renderers_dyn()); }
	}
	return super::__Field(inName,inCallProp);
}

bool Application_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"current") ) { outValue = current; return true; }
	}
	return false;
}

hx::Val Application_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"config") ) { config=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"window") ) { window=inValue.Cast<  ::lime::ui::Window >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"modules") ) { modules=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"windows") ) { windows=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"backend") ) { backend=inValue.Cast<  ::lime::_backend::native::NativeApplication >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"onUpdate") ) { onUpdate=inValue.Cast<  ::lime::app::_Event_Int_Void >(); return inValue; }
		if (HX_FIELD_EQ(inName,"renderer") ) { renderer=inValue.Cast<  ::lime::graphics::Renderer >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"frameRate") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_frameRate(inValue) ); }
		if (HX_FIELD_EQ(inName,"preloader") ) { preloader=inValue.Cast<  ::lime::app::Preloader >(); return inValue; }
		if (HX_FIELD_EQ(inName,"renderers") ) { renderers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"windowByID") ) { windowByID=inValue.Cast<  ::haxe::ds::IntMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Application_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"current") ) { current=ioValue.Cast<  ::lime::app::Application >(); return true; }
	}
	return false;
}

void Application_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("config","\xc2","\x56","\xd2","\xc7"));
	outFields->push(HX_HCSTRING("frameRate","\xad","\x11","\x25","\x39"));
	outFields->push(HX_HCSTRING("modules","\x47","\xe2","\xfa","\xf7"));
	outFields->push(HX_HCSTRING("preloader","\x76","\xe4","\x7b","\x82"));
	outFields->push(HX_HCSTRING("onUpdate","\x88","\x7c","\xb2","\x66"));
	outFields->push(HX_HCSTRING("renderer","\x43","\xc5","\xdb","\xb2"));
	outFields->push(HX_HCSTRING("renderers","\xd0","\xd5","\x70","\xcd"));
	outFields->push(HX_HCSTRING("window","\xf0","\x93","\x8c","\x52"));
	outFields->push(HX_HCSTRING("windows","\x83","\xde","\x74","\xe8"));
	outFields->push(HX_HCSTRING("backend","\x14","\xbc","\x87","\xfb"));
	outFields->push(HX_HCSTRING("windowByID","\x82","\x71","\xf9","\xcb"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Application_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Application_obj,config),HX_HCSTRING("config","\xc2","\x56","\xd2","\xc7")},
	{hx::fsObject /*Array< ::lime::app::IModule >*/ ,(int)offsetof(Application_obj,modules),HX_HCSTRING("modules","\x47","\xe2","\xfa","\xf7")},
	{hx::fsObject /*::lime::app::Preloader*/ ,(int)offsetof(Application_obj,preloader),HX_HCSTRING("preloader","\x76","\xe4","\x7b","\x82")},
	{hx::fsObject /*::lime::app::_Event_Int_Void*/ ,(int)offsetof(Application_obj,onUpdate),HX_HCSTRING("onUpdate","\x88","\x7c","\xb2","\x66")},
	{hx::fsObject /*::lime::graphics::Renderer*/ ,(int)offsetof(Application_obj,renderer),HX_HCSTRING("renderer","\x43","\xc5","\xdb","\xb2")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Application_obj,renderers),HX_HCSTRING("renderers","\xd0","\xd5","\x70","\xcd")},
	{hx::fsObject /*::lime::ui::Window*/ ,(int)offsetof(Application_obj,window),HX_HCSTRING("window","\xf0","\x93","\x8c","\x52")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Application_obj,windows),HX_HCSTRING("windows","\x83","\xde","\x74","\xe8")},
	{hx::fsObject /*::lime::_backend::native::NativeApplication*/ ,(int)offsetof(Application_obj,backend),HX_HCSTRING("backend","\x14","\xbc","\x87","\xfb")},
	{hx::fsObject /*::haxe::ds::IntMap*/ ,(int)offsetof(Application_obj,windowByID),HX_HCSTRING("windowByID","\x82","\x71","\xf9","\xcb")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Application_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::lime::app::Application*/ ,(void *) &Application_obj::current,HX_HCSTRING("current","\x39","\x9c","\xe3","\xcb")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Application_obj_sMemberFields[] = {
	HX_HCSTRING("config","\xc2","\x56","\xd2","\xc7"),
	HX_HCSTRING("modules","\x47","\xe2","\xfa","\xf7"),
	HX_HCSTRING("preloader","\x76","\xe4","\x7b","\x82"),
	HX_HCSTRING("onUpdate","\x88","\x7c","\xb2","\x66"),
	HX_HCSTRING("renderer","\x43","\xc5","\xdb","\xb2"),
	HX_HCSTRING("renderers","\xd0","\xd5","\x70","\xcd"),
	HX_HCSTRING("window","\xf0","\x93","\x8c","\x52"),
	HX_HCSTRING("windows","\x83","\xde","\x74","\xe8"),
	HX_HCSTRING("backend","\x14","\xbc","\x87","\xfb"),
	HX_HCSTRING("windowByID","\x82","\x71","\xf9","\xcb"),
	HX_HCSTRING("addModule","\xad","\x69","\xf7","\x78"),
	HX_HCSTRING("addRenderer","\x84","\xfc","\x37","\xe4"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("createWindow","\x0c","\xd4","\xe1","\x74"),
	HX_HCSTRING("exec","\x91","\xf3","\x1d","\x43"),
	HX_HCSTRING("onModuleExit","\xe9","\xbf","\xa3","\x0b"),
	HX_HCSTRING("onWindowClose","\xc9","\xca","\x1f","\x9c"),
	HX_HCSTRING("removeModule","\x10","\xd0","\x00","\x30"),
	HX_HCSTRING("removeWindow","\x54","\x2f","\xba","\xc1"),
	HX_HCSTRING("setPreloader","\x74","\xa4","\xcb","\xa6"),
	HX_HCSTRING("get_frameRate","\x84","\xe5","\x88","\xfa"),
	HX_HCSTRING("set_frameRate","\x90","\xc7","\x8e","\x3f"),
	HX_HCSTRING("get_preloader","\x4d","\xb8","\xdf","\x43"),
	HX_HCSTRING("get_renderer","\x4c","\x79","\xf5","\x67"),
	HX_HCSTRING("get_renderers","\xa7","\xa9","\xd4","\x8e"),
	HX_HCSTRING("get_window","\xb9","\x03","\x14","\x43"),
	HX_HCSTRING("get_windows","\x9a","\x3e","\x6f","\x6e"),
	::String(null()) };

static void Application_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Application_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Application_obj::current,"current");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Application_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Application_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Application_obj::current,"current");
};

#endif

hx::Class Application_obj::__mClass;

static ::String Application_obj_sStaticFields[] = {
	HX_HCSTRING("current","\x39","\x9c","\xe3","\xcb"),
	::String(null())
};

void Application_obj::__register()
{
	hx::Object *dummy = new Application_obj;
	Application_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.app.Application","\x8a","\x94","\x72","\x90");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Application_obj::__GetStatic;
	__mClass->mSetStaticField = &Application_obj::__SetStatic;
	__mClass->mMarkFunc = Application_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Application_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Application_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Application_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Application_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Application_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Application_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Application_obj::__boot()
{
}

} // end namespace lime
} // end namespace app
