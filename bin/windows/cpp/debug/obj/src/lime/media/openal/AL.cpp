// Generated by Haxe 3.4.0
#include <hxcpp.h>

#ifndef INCLUDED_lime__backend_native_NativeCFFI
#include <lime/_backend/native/NativeCFFI.h>
#endif
#ifndef INCLUDED_lime_media_openal_AL
#include <lime/media/openal/AL.h>
#endif
#ifndef INCLUDED_lime_utils_ArrayBufferView
#include <lime/utils/ArrayBufferView.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_86_bufferData,"lime.media.openal.AL","bufferData",0x84698d77,"lime.media.openal.AL.bufferData","lime/media/openal/AL.hx",86,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_95_buffer3f,"lime.media.openal.AL","buffer3f",0xa65222c0,"lime.media.openal.AL.buffer3f","lime/media/openal/AL.hx",95,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_104_buffer3i,"lime.media.openal.AL","buffer3i",0xa65222c3,"lime.media.openal.AL.buffer3i","lime/media/openal/AL.hx",104,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_113_bufferf,"lime.media.openal.AL","bufferf",0x1e97e719,"lime.media.openal.AL.bufferf","lime/media/openal/AL.hx",113,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_122_bufferfv,"lime.media.openal.AL","bufferfv",0xa6524f3d,"lime.media.openal.AL.bufferfv","lime/media/openal/AL.hx",122,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_131_bufferi,"lime.media.openal.AL","bufferi",0x1e97e71c,"lime.media.openal.AL.bufferi","lime/media/openal/AL.hx",131,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_140_bufferiv,"lime.media.openal.AL","bufferiv",0xa65251da,"lime.media.openal.AL.bufferiv","lime/media/openal/AL.hx",140,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_149_createBuffer,"lime.media.openal.AL","createBuffer",0x67917089,"lime.media.openal.AL.createBuffer","lime/media/openal/AL.hx",149,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_160_createSource,"lime.media.openal.AL","createSource",0xc92e6464,"lime.media.openal.AL.createSource","lime/media/openal/AL.hx",160,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_171_deleteBuffer,"lime.media.openal.AL","deleteBuffer",0xabd456f8,"lime.media.openal.AL.deleteBuffer","lime/media/openal/AL.hx",171,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_180_deleteBuffers,"lime.media.openal.AL","deleteBuffers",0xadf7c27b,"lime.media.openal.AL.deleteBuffers","lime/media/openal/AL.hx",180,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_189_deleteSource,"lime.media.openal.AL","deleteSource",0x0d714ad3,"lime.media.openal.AL.deleteSource","lime/media/openal/AL.hx",189,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_198_deleteSources,"lime.media.openal.AL","deleteSources",0xb5b02e40,"lime.media.openal.AL.deleteSources","lime/media/openal/AL.hx",198,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_207_disable,"lime.media.openal.AL","disable",0x1e5fad9b,"lime.media.openal.AL.disable","lime/media/openal/AL.hx",207,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_216_distanceModel,"lime.media.openal.AL","distanceModel",0x71becc27,"lime.media.openal.AL.distanceModel","lime/media/openal/AL.hx",216,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_225_dopplerFactor,"lime.media.openal.AL","dopplerFactor",0x0ce2b9d0,"lime.media.openal.AL.dopplerFactor","lime/media/openal/AL.hx",225,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_234_dopplerVelocity,"lime.media.openal.AL","dopplerVelocity",0x001e255e,"lime.media.openal.AL.dopplerVelocity","lime/media/openal/AL.hx",234,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_243_enable,"lime.media.openal.AL","enable",0x53b5a230,"lime.media.openal.AL.enable","lime/media/openal/AL.hx",243,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_252_genSource,"lime.media.openal.AL","genSource",0xe52d47fe,"lime.media.openal.AL.genSource","lime/media/openal/AL.hx",252,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_263_genSources,"lime.media.openal.AL","genSources",0xa271b6b5,"lime.media.openal.AL.genSources","lime/media/openal/AL.hx",263,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_274_genBuffer,"lime.media.openal.AL","genBuffer",0x83905423,"lime.media.openal.AL.genBuffer","lime/media/openal/AL.hx",274,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_285_genBuffers,"lime.media.openal.AL","genBuffers",0x9ab94af0,"lime.media.openal.AL.genBuffers","lime/media/openal/AL.hx",285,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_296_getBoolean,"lime.media.openal.AL","getBoolean",0xbe563edf,"lime.media.openal.AL.getBoolean","lime/media/openal/AL.hx",296,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_307_getBooleanv,"lime.media.openal.AL","getBooleanv",0xcd20c4b7,"lime.media.openal.AL.getBooleanv","lime/media/openal/AL.hx",307,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_318_getBuffer3f,"lime.media.openal.AL","getBuffer3f",0xb91085bc,"lime.media.openal.AL.getBuffer3f","lime/media/openal/AL.hx",318,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_329_getBuffer3i,"lime.media.openal.AL","getBuffer3i",0xb91085bf,"lime.media.openal.AL.getBuffer3i","lime/media/openal/AL.hx",329,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_340_getBufferf,"lime.media.openal.AL","getBufferf",0xf1e7f79d,"lime.media.openal.AL.getBufferf","lime/media/openal/AL.hx",340,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_351_getBufferfv,"lime.media.openal.AL","getBufferfv",0xb910b239,"lime.media.openal.AL.getBufferfv","lime/media/openal/AL.hx",351,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_362_getBufferi,"lime.media.openal.AL","getBufferi",0xf1e7f7a0,"lime.media.openal.AL.getBufferi","lime/media/openal/AL.hx",362,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_373_getBufferiv,"lime.media.openal.AL","getBufferiv",0xb910b4d6,"lime.media.openal.AL.getBufferiv","lime/media/openal/AL.hx",373,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_384_getDouble,"lime.media.openal.AL","getDouble",0xdf478aba,"lime.media.openal.AL.getDouble","lime/media/openal/AL.hx",384,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_395_getDoublev,"lime.media.openal.AL","getDoublev",0x7f51d87c,"lime.media.openal.AL.getDoublev","lime/media/openal/AL.hx",395,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_406_getEnumValue,"lime.media.openal.AL","getEnumValue",0xac0510a7,"lime.media.openal.AL.getEnumValue","lime/media/openal/AL.hx",406,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_417_getError,"lime.media.openal.AL","getError",0xcc54d43f,"lime.media.openal.AL.getError","lime/media/openal/AL.hx",417,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_427_getErrorString,"lime.media.openal.AL","getErrorString",0x0b38aa70,"lime.media.openal.AL.getErrorString","lime/media/openal/AL.hx",427,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_444_getFloat,"lime.media.openal.AL","getFloat",0x5bc1ce13,"lime.media.openal.AL.getFloat","lime/media/openal/AL.hx",444,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_455_getFloatv,"lime.media.openal.AL","getFloatv",0xedd28303,"lime.media.openal.AL.getFloatv","lime/media/openal/AL.hx",455,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_466_getInteger,"lime.media.openal.AL","getInteger",0x577311f5,"lime.media.openal.AL.getInteger","lime/media/openal/AL.hx",466,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_477_getIntegerv,"lime.media.openal.AL","getIntegerv",0x2d3ca4e1,"lime.media.openal.AL.getIntegerv","lime/media/openal/AL.hx",477,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_488_getListener3f,"lime.media.openal.AL","getListener3f",0x235a1a70,"lime.media.openal.AL.getListener3f","lime/media/openal/AL.hx",488,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_499_getListener3i,"lime.media.openal.AL","getListener3i",0x235a1a73,"lime.media.openal.AL.getListener3i","lime/media/openal/AL.hx",499,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_510_getListenerf,"lime.media.openal.AL","getListenerf",0x778c7569,"lime.media.openal.AL.getListenerf","lime/media/openal/AL.hx",510,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_521_getListenerfv,"lime.media.openal.AL","getListenerfv",0x235a46ed,"lime.media.openal.AL.getListenerfv","lime/media/openal/AL.hx",521,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_532_getListeneri,"lime.media.openal.AL","getListeneri",0x778c756c,"lime.media.openal.AL.getListeneri","lime/media/openal/AL.hx",532,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_543_getListeneriv,"lime.media.openal.AL","getListeneriv",0x235a498a,"lime.media.openal.AL.getListeneriv","lime/media/openal/AL.hx",543,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_554_getParameter,"lime.media.openal.AL","getParameter",0xccae45a0,"lime.media.openal.AL.getParameter","lime/media/openal/AL.hx",554,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_562_getProcAddress,"lime.media.openal.AL","getProcAddress",0x0d9ecc75,"lime.media.openal.AL.getProcAddress","lime/media/openal/AL.hx",562,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_573_getSource3f,"lime.media.openal.AL","getSource3f",0x72b66657,"lime.media.openal.AL.getSource3f","lime/media/openal/AL.hx",573,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_584_getSourcef,"lime.media.openal.AL","getSourcef",0xf9a06362,"lime.media.openal.AL.getSourcef","lime/media/openal/AL.hx",584,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_595_getSource3i,"lime.media.openal.AL","getSource3i",0x72b6665a,"lime.media.openal.AL.getSource3i","lime/media/openal/AL.hx",595,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_606_getSourcefv,"lime.media.openal.AL","getSourcefv",0x72b692d4,"lime.media.openal.AL.getSourcefv","lime/media/openal/AL.hx",606,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_617_getSourcei,"lime.media.openal.AL","getSourcei",0xf9a06365,"lime.media.openal.AL.getSourcei","lime/media/openal/AL.hx",617,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_628_getSourceiv,"lime.media.openal.AL","getSourceiv",0x72b69571,"lime.media.openal.AL.getSourceiv","lime/media/openal/AL.hx",628,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_639_getString,"lime.media.openal.AL","getString",0xbdac887a,"lime.media.openal.AL.getString","lime/media/openal/AL.hx",639,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_650_isBuffer,"lime.media.openal.AL","isBuffer",0x22525177,"lime.media.openal.AL.isBuffer","lime/media/openal/AL.hx",650,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_661_isEnabled,"lime.media.openal.AL","isEnabled",0xb255582a,"lime.media.openal.AL.isEnabled","lime/media/openal/AL.hx",661,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_672_isExtensionPresent,"lime.media.openal.AL","isExtensionPresent",0x790e3c73,"lime.media.openal.AL.isExtensionPresent","lime/media/openal/AL.hx",672,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_683_isSource,"lime.media.openal.AL","isSource",0x83ef4552,"lime.media.openal.AL.isSource","lime/media/openal/AL.hx",683,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_694_listener3f,"lime.media.openal.AL","listener3f",0x1a000074,"lime.media.openal.AL.listener3f","lime/media/openal/AL.hx",694,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_703_listener3i,"lime.media.openal.AL","listener3i",0x1a000077,"lime.media.openal.AL.listener3i","lime/media/openal/AL.hx",703,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_712_listenerf,"lime.media.openal.AL","listenerf",0x23b43be5,"lime.media.openal.AL.listenerf","lime/media/openal/AL.hx",712,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_721_listenerfv,"lime.media.openal.AL","listenerfv",0x1a002cf1,"lime.media.openal.AL.listenerfv","lime/media/openal/AL.hx",721,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_730_listeneri,"lime.media.openal.AL","listeneri",0x23b43be8,"lime.media.openal.AL.listeneri","lime/media/openal/AL.hx",730,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_739_listeneriv,"lime.media.openal.AL","listeneriv",0x1a002f8e,"lime.media.openal.AL.listeneriv","lime/media/openal/AL.hx",739,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_748_source3f,"lime.media.openal.AL","source3f",0x5ff8035b,"lime.media.openal.AL.source3f","lime/media/openal/AL.hx",748,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_757_source3i,"lime.media.openal.AL","source3i",0x5ff8035e,"lime.media.openal.AL.source3i","lime/media/openal/AL.hx",757,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_766_sourcef,"lime.media.openal.AL","sourcef",0x265052de,"lime.media.openal.AL.sourcef","lime/media/openal/AL.hx",766,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_775_sourcefv,"lime.media.openal.AL","sourcefv",0x5ff82fd8,"lime.media.openal.AL.sourcefv","lime/media/openal/AL.hx",775,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_784_sourcei,"lime.media.openal.AL","sourcei",0x265052e1,"lime.media.openal.AL.sourcei","lime/media/openal/AL.hx",784,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_793_sourceiv,"lime.media.openal.AL","sourceiv",0x5ff83275,"lime.media.openal.AL.sourceiv","lime/media/openal/AL.hx",793,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_802_sourcePlay,"lime.media.openal.AL","sourcePlay",0x63b3e29c,"lime.media.openal.AL.sourcePlay","lime/media/openal/AL.hx",802,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_811_sourcePlayv,"lime.media.openal.AL","sourcePlayv",0xd9b2665a,"lime.media.openal.AL.sourcePlayv","lime/media/openal/AL.hx",811,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_820_sourceStop,"lime.media.openal.AL","sourceStop",0x65b5a4aa,"lime.media.openal.AL.sourceStop","lime/media/openal/AL.hx",820,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_829_sourceStopv,"lime.media.openal.AL","sourceStopv",0x993a708c,"lime.media.openal.AL.sourceStopv","lime/media/openal/AL.hx",829,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_838_sourceRewind,"lime.media.openal.AL","sourceRewind",0x75ce58a3,"lime.media.openal.AL.sourceRewind","lime/media/openal/AL.hx",838,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_847_sourceRewindv,"lime.media.openal.AL","sourceRewindv",0x9ebf3673,"lime.media.openal.AL.sourceRewindv","lime/media/openal/AL.hx",847,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_856_sourcePause,"lime.media.openal.AL","sourcePause",0xd27c354e,"lime.media.openal.AL.sourcePause","lime/media/openal/AL.hx",856,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_865_sourcePausev,"lime.media.openal.AL","sourcePausev",0x5a326f68,"lime.media.openal.AL.sourcePausev","lime/media/openal/AL.hx",865,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_871_sourceQueueBuffer,"lime.media.openal.AL","sourceQueueBuffer",0x43c371c9,"lime.media.openal.AL.sourceQueueBuffer","lime/media/openal/AL.hx",871,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_884_sourceQueueBuffers,"lime.media.openal.AL","sourceQueueBuffers",0x07401e8a,"lime.media.openal.AL.sourceQueueBuffers","lime/media/openal/AL.hx",884,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_890_sourceUnqueueBuffer,"lime.media.openal.AL","sourceUnqueueBuffer",0xb08cae10,"lime.media.openal.AL.sourceUnqueueBuffer","lime/media/openal/AL.hx",890,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_905_sourceUnqueueBuffers,"lime.media.openal.AL","sourceUnqueueBuffers",0xca8ba063,"lime.media.openal.AL.sourceUnqueueBuffers","lime/media/openal/AL.hx",905,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_916_speedOfSound,"lime.media.openal.AL","speedOfSound",0x7ec95ade,"lime.media.openal.AL.speedOfSound","lime/media/openal/AL.hx",916,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_19_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",19,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_20_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",20,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_21_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",21,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_22_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",22,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_23_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",23,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_24_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",24,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_25_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",25,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_26_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",26,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_27_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",27,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_28_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",28,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_29_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",29,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_30_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",30,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_31_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",31,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_32_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",32,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_33_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",33,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_34_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",34,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_35_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",35,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_36_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",36,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_37_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",37,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_38_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",38,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_39_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",39,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_40_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",40,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_41_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",41,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_42_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",42,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_43_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",43,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_44_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",44,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_45_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",45,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_46_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",46,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_47_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",47,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_48_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",48,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_49_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",49,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_50_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",50,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_51_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",51,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_52_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",52,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_53_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",53,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_54_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",54,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_55_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",55,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_56_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",56,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_57_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",57,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_58_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",58,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_59_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",59,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_60_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",60,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_61_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",61,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_62_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",62,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_63_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",63,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_64_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",64,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_65_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",65,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_66_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",66,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_67_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",67,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_68_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",68,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_69_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",69,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_70_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",70,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_71_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",71,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_72_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",72,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_73_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",73,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_74_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",74,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_75_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",75,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_76_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",76,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_77_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",77,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_78_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",78,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_79_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",79,0x932ea25e)
HX_LOCAL_STACK_FRAME(_hx_pos_87306d7050ce8f43_80_boot,"lime.media.openal.AL","boot",0xb20b429f,"lime.media.openal.AL.boot","lime/media/openal/AL.hx",80,0x932ea25e)
namespace lime{
namespace media{
namespace openal{

void AL_obj::__construct() { }

Dynamic AL_obj::__CreateEmpty() { return new AL_obj; }

void *AL_obj::_hx_vtable = 0;

Dynamic AL_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< AL_obj > _hx_result = new AL_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AL_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1527a64f;
}

int AL_obj::NONE;

int AL_obj::FALSE;

int AL_obj::TRUE;

int AL_obj::SOURCE_RELATIVE;

int AL_obj::CONE_INNER_ANGLE;

int AL_obj::CONE_OUTER_ANGLE;

int AL_obj::PITCH;

int AL_obj::POSITION;

int AL_obj::DIRECTION;

int AL_obj::VELOCITY;

int AL_obj::LOOPING;

int AL_obj::BUFFER;

int AL_obj::GAIN;

int AL_obj::MIN_GAIN;

int AL_obj::MAX_GAIN;

int AL_obj::ORIENTATION;

int AL_obj::SOURCE_STATE;

int AL_obj::INITIAL;

int AL_obj::PLAYING;

int AL_obj::PAUSED;

int AL_obj::STOPPED;

int AL_obj::BUFFERS_QUEUED;

int AL_obj::BUFFERS_PROCESSED;

int AL_obj::REFERENCE_DISTANCE;

int AL_obj::ROLLOFF_FACTOR;

int AL_obj::CONE_OUTER_GAIN;

int AL_obj::MAX_DISTANCE;

int AL_obj::SEC_OFFSET;

int AL_obj::SAMPLE_OFFSET;

int AL_obj::BYTE_OFFSET;

int AL_obj::SOURCE_TYPE;

int AL_obj::STATIC;

int AL_obj::STREAMING;

int AL_obj::UNDETERMINED;

int AL_obj::FORMAT_MONO8;

int AL_obj::FORMAT_MONO16;

int AL_obj::FORMAT_STEREO8;

int AL_obj::FORMAT_STEREO16;

int AL_obj::FREQUENCY;

int AL_obj::BITS;

int AL_obj::CHANNELS;

int AL_obj::SIZE;

int AL_obj::NO_ERROR;

int AL_obj::INVALID_NAME;

int AL_obj::INVALID_ENUM;

int AL_obj::INVALID_VALUE;

int AL_obj::INVALID_OPERATION;

int AL_obj::OUT_OF_MEMORY;

int AL_obj::VENDOR;

int AL_obj::VERSION;

int AL_obj::RENDERER;

int AL_obj::EXTENSIONS;

int AL_obj::DOPPLER_FACTOR;

int AL_obj::SPEED_OF_SOUND;

int AL_obj::DOPPLER_VELOCITY;

int AL_obj::DISTANCE_MODEL;

int AL_obj::INVERSE_DISTANCE;

int AL_obj::INVERSE_DISTANCE_CLAMPED;

int AL_obj::LINEAR_DISTANCE;

int AL_obj::LINEAR_DISTANCE_CLAMPED;

int AL_obj::EXPONENT_DISTANCE;

int AL_obj::EXPONENT_DISTANCE_CLAMPED;

void AL_obj::bufferData( ::Dynamic buffer,int format, ::lime::utils::ArrayBufferView data,int size,int freq){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_86_bufferData)
HXLINE(  86)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_buffer_data(hx::DynamicPtr(buffer),format,hx::DynamicPtr(data),size,freq);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,bufferData,(void))

void AL_obj::buffer3f( ::Dynamic buffer,int param,Float value1,Float value2,Float value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_95_buffer3f)
HXLINE(  95)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_buffer3f(hx::DynamicPtr(buffer),param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,buffer3f,(void))

void AL_obj::buffer3i( ::Dynamic buffer,int param,int value1,int value2,int value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_104_buffer3i)
HXLINE( 104)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_buffer3i(hx::DynamicPtr(buffer),param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,buffer3i,(void))

void AL_obj::bufferf( ::Dynamic buffer,int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_113_bufferf)
HXLINE( 113)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferf(hx::DynamicPtr(buffer),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferf,(void))

void AL_obj::bufferfv( ::Dynamic buffer,int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_122_bufferfv)
HXLINE( 122)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferfv(hx::DynamicPtr(buffer),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferfv,(void))

void AL_obj::bufferi( ::Dynamic buffer,int param,int value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_131_bufferi)
HXLINE( 131)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferi(hx::DynamicPtr(buffer),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferi,(void))

void AL_obj::bufferiv( ::Dynamic buffer,int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_140_bufferiv)
HXLINE( 140)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_bufferiv(hx::DynamicPtr(buffer),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,bufferiv,(void))

 ::Dynamic AL_obj::createBuffer(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_149_createBuffer)
HXLINE( 149)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_buffer()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,createBuffer,return )

 ::Dynamic AL_obj::createSource(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_160_createSource)
HXLINE( 160)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_source()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,createSource,return )

void AL_obj::deleteBuffer( ::Dynamic buffer){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_171_deleteBuffer)
HXLINE( 171)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_buffer(hx::DynamicPtr(buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteBuffer,(void))

void AL_obj::deleteBuffers(::cpp::VirtualArray buffers){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_180_deleteBuffers)
HXLINE( 180)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_buffers(buffers->get_length(),hx::DynamicPtr(buffers));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteBuffers,(void))

void AL_obj::deleteSource( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_189_deleteSource)
HXLINE( 189)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_source(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteSource,(void))

void AL_obj::deleteSources(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_198_deleteSources)
HXLINE( 198)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_delete_sources(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,deleteSources,(void))

void AL_obj::disable(int capability){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_207_disable)
HXLINE( 207)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_disable(capability);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,disable,(void))

void AL_obj::distanceModel(int distanceModel){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_216_distanceModel)
HXLINE( 216)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_distance_model(distanceModel);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,distanceModel,(void))

void AL_obj::dopplerFactor(Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_225_dopplerFactor)
HXLINE( 225)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_doppler_factor(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,dopplerFactor,(void))

void AL_obj::dopplerVelocity(Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_234_dopplerVelocity)
HXLINE( 234)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_doppler_velocity(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,dopplerVelocity,(void))

void AL_obj::enable(int capability){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_243_enable)
HXLINE( 243)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_enable(capability);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,enable,(void))

 ::Dynamic AL_obj::genSource(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_252_genSource)
HXLINE( 252)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_source()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,genSource,return )

::cpp::VirtualArray AL_obj::genSources(int n){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_263_genSources)
HXLINE( 263)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_sources(n)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,genSources,return )

 ::Dynamic AL_obj::genBuffer(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_274_genBuffer)
HXLINE( 274)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_buffer()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,genBuffer,return )

::cpp::VirtualArray AL_obj::genBuffers(int n){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_285_genBuffers)
HXLINE( 285)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_gen_buffers(n)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,genBuffers,return )

bool AL_obj::getBoolean(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_296_getBoolean)
HXLINE( 296)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_boolean(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getBoolean,return )

::Array< bool > AL_obj::getBooleanv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_307_getBooleanv)
HXLINE( 307)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_booleanv(param,(int)1)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBooleanv,return )

::Array< Float > AL_obj::getBuffer3f( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_318_getBuffer3f)
HXLINE( 318)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_buffer3f(hx::DynamicPtr(buffer),param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBuffer3f,return )

::Array< int > AL_obj::getBuffer3i( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_329_getBuffer3i)
HXLINE( 329)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_buffer3i(hx::DynamicPtr(buffer),param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBuffer3i,return )

Float AL_obj::getBufferf( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_340_getBufferf)
HXLINE( 340)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferf(hx::DynamicPtr(buffer),param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBufferf,return )

::Array< Float > AL_obj::getBufferfv( ::Dynamic buffer,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_351_getBufferfv)
HXLINE( 351)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferfv(hx::DynamicPtr(buffer),param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getBufferfv,return )

int AL_obj::getBufferi( ::Dynamic buffer,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_362_getBufferi)
HXLINE( 362)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferi(hx::DynamicPtr(buffer),param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getBufferi,return )

::Array< int > AL_obj::getBufferiv( ::Dynamic buffer,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_373_getBufferiv)
HXLINE( 373)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_bufferiv(hx::DynamicPtr(buffer),param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getBufferiv,return )

Float AL_obj::getDouble(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_384_getDouble)
HXLINE( 384)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_double(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getDouble,return )

::Array< Float > AL_obj::getDoublev(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_395_getDoublev)
HXLINE( 395)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_doublev(param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getDoublev,return )

int AL_obj::getEnumValue(::String ename){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_406_getEnumValue)
HXLINE( 406)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_enum_value(ename);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getEnumValue,return )

int AL_obj::getError(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_417_getError)
HXLINE( 417)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_error();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,getError,return )

::String AL_obj::getErrorString(){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_427_getErrorString)
HXLINE( 427)		int _g = ::lime::media::openal::AL_obj::getError();
HXDLIN( 427)		switch((int)(_g)){
            			case (int)40961: {
HXLINE( 427)				return HX_("INVALID_NAME: Invalid parameter name",64,c3,04,f4);
            			}
            			break;
            			case (int)40962: {
HXLINE( 427)				return HX_("INVALID_ENUM: Invalid enum value",0a,d7,df,59);
            			}
            			break;
            			case (int)40963: {
HXLINE( 427)				return HX_("INVALID_VALUE: Invalid parameter value",c2,a4,37,f8);
            			}
            			break;
            			case (int)40964: {
HXLINE( 427)				return HX_("INVALID_OPERATION: Illegal operation or call",13,8a,e7,93);
            			}
            			break;
            			case (int)40965: {
HXLINE( 427)				return HX_("OUT_OF_MEMORY: OpenAL has run out of memory",b0,dd,fb,0a);
            			}
            			break;
            			default:{
HXLINE( 427)				return HX_("",00,00,00,00);
            			}
            		}
HXDLIN( 427)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(AL_obj,getErrorString,return )

Float AL_obj::getFloat(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_444_getFloat)
HXLINE( 444)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_float(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getFloat,return )

::Array< Float > AL_obj::getFloatv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_455_getFloatv)
HXLINE( 455)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_floatv(param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getFloatv,return )

int AL_obj::getInteger(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_466_getInteger)
HXLINE( 466)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_integer(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getInteger,return )

::Array< int > AL_obj::getIntegerv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_477_getIntegerv)
HXLINE( 477)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_integerv(param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getIntegerv,return )

::Array< Float > AL_obj::getListener3f(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_488_getListener3f)
HXLINE( 488)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listener3f(param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListener3f,return )

::Array< int > AL_obj::getListener3i(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_499_getListener3i)
HXLINE( 499)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listener3i(param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListener3i,return )

Float AL_obj::getListenerf(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_510_getListenerf)
HXLINE( 510)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listenerf(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListenerf,return )

::Array< Float > AL_obj::getListenerfv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_521_getListenerfv)
HXLINE( 521)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listenerfv(param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getListenerfv,return )

int AL_obj::getListeneri(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_532_getListeneri)
HXLINE( 532)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listeneri(param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getListeneri,return )

::Array< int > AL_obj::getListeneriv(int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_543_getListeneriv)
HXLINE( 543)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_listeneriv(param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getListeneriv,return )

 ::Dynamic AL_obj::getParameter(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_554_getParameter)
HXLINE( 554)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getParameter,return )

 ::Dynamic AL_obj::getProcAddress(::String fname){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_562_getProcAddress)
HXLINE( 562)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_proc_address(fname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getProcAddress,return )

::Array< Float > AL_obj::getSource3f( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_573_getSource3f)
HXLINE( 573)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_source3f(hx::DynamicPtr(source),param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSource3f,return )

Float AL_obj::getSourcef( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_584_getSourcef)
HXLINE( 584)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourcef(hx::DynamicPtr(source),param);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSourcef,return )

::Array< int > AL_obj::getSource3i( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_595_getSource3i)
HXLINE( 595)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_source3i(hx::DynamicPtr(source),param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSource3i,return )

::Array< Float > AL_obj::getSourcefv( ::Dynamic source,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_606_getSourcefv)
HXLINE( 606)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourcefv(hx::DynamicPtr(source),param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getSourcefv,return )

 ::Dynamic AL_obj::getSourcei( ::Dynamic source,int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_617_getSourcei)
HXLINE( 617)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourcei(hx::DynamicPtr(source),param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,getSourcei,return )

::Array< int > AL_obj::getSourceiv( ::Dynamic source,int param,hx::Null< int >  __o_count){
int count = __o_count.Default(1);
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_628_getSourceiv)
HXLINE( 628)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_sourceiv(hx::DynamicPtr(source),param,count)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,getSourceiv,return )

::String AL_obj::getString(int param){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_639_getString)
HXLINE( 639)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_get_string(param)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,getString,return )

bool AL_obj::isBuffer( ::Dynamic buffer){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_650_isBuffer)
HXLINE( 650)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_buffer(hx::DynamicPtr(buffer));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isBuffer,return )

bool AL_obj::isEnabled(int capability){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_661_isEnabled)
HXLINE( 661)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_enabled(capability);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isEnabled,return )

bool AL_obj::isExtensionPresent(::String extname){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_672_isExtensionPresent)
HXLINE( 672)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_extension_present(extname);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isExtensionPresent,return )

bool AL_obj::isSource( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_683_isSource)
HXLINE( 683)		return ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_is_source(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,isSource,return )

void AL_obj::listener3f(int param,Float value1,Float value2,Float value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_694_listener3f)
HXLINE( 694)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listener3f(param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(AL_obj,listener3f,(void))

void AL_obj::listener3i(int param,int value1,int value2,int value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_703_listener3i)
HXLINE( 703)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listener3i(param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(AL_obj,listener3i,(void))

void AL_obj::listenerf(int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_712_listenerf)
HXLINE( 712)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listenerf(param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listenerf,(void))

void AL_obj::listenerfv(int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_721_listenerfv)
HXLINE( 721)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listenerfv(param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listenerfv,(void))

void AL_obj::listeneri(int param,int value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_730_listeneri)
HXLINE( 730)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listeneri(param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listeneri,(void))

void AL_obj::listeneriv(int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_739_listeneriv)
HXLINE( 739)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_listeneriv(param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,listeneriv,(void))

void AL_obj::source3f( ::Dynamic source,int param,Float value1,Float value2,Float value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_748_source3f)
HXLINE( 748)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source3f(hx::DynamicPtr(source),param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,source3f,(void))

void AL_obj::source3i( ::Dynamic source,int param,int value1,int value2,int value3){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_757_source3i)
HXLINE( 757)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source3i(hx::DynamicPtr(source),param,value1,value2,value3);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(AL_obj,source3i,(void))

void AL_obj::sourcef( ::Dynamic source,int param,Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_766_sourcef)
HXLINE( 766)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourcef(hx::DynamicPtr(source),param,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourcef,(void))

void AL_obj::sourcefv( ::Dynamic source,int param,::Array< Float > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_775_sourcefv)
HXLINE( 775)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourcefv(hx::DynamicPtr(source),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourcefv,(void))

void AL_obj::sourcei( ::Dynamic source,int param, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_784_sourcei)
HXLINE( 784)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourcei(hx::DynamicPtr(source),param,hx::DynamicPtr(value));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourcei,(void))

void AL_obj::sourceiv( ::Dynamic source,int param,::Array< int > values){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_793_sourceiv)
HXLINE( 793)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_sourceiv(hx::DynamicPtr(source),param,hx::DynamicPtr(values));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourceiv,(void))

void AL_obj::sourcePlay( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_802_sourcePlay)
HXLINE( 802)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_play(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePlay,(void))

void AL_obj::sourcePlayv(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_811_sourcePlayv)
HXLINE( 811)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_playv(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePlayv,(void))

void AL_obj::sourceStop( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_820_sourceStop)
HXLINE( 820)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_stop(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceStop,(void))

void AL_obj::sourceStopv(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_829_sourceStopv)
HXLINE( 829)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_stopv(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceStopv,(void))

void AL_obj::sourceRewind( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_838_sourceRewind)
HXLINE( 838)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_rewind(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceRewind,(void))

void AL_obj::sourceRewindv(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_847_sourceRewindv)
HXLINE( 847)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_rewindv(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceRewindv,(void))

void AL_obj::sourcePause( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_856_sourcePause)
HXLINE( 856)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_pause(hx::DynamicPtr(source));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePause,(void))

void AL_obj::sourcePausev(::cpp::VirtualArray sources){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_865_sourcePausev)
HXLINE( 865)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_pausev(sources->get_length(),hx::DynamicPtr(sources));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourcePausev,(void))

void AL_obj::sourceQueueBuffer( ::Dynamic source, ::Dynamic buffer){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_871_sourceQueueBuffer)
HXLINE( 874)		::cpp::VirtualArray buffers = ::cpp::VirtualArray_obj::__new(1)->init(0,buffer);
HXLINE( 875)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_queue_buffers(hx::DynamicPtr(source),(int)1,hx::DynamicPtr(buffers));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,sourceQueueBuffer,(void))

void AL_obj::sourceQueueBuffers( ::Dynamic source,int nb,::cpp::VirtualArray buffers){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_884_sourceQueueBuffers)
HXLINE( 884)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_queue_buffers(hx::DynamicPtr(source),nb,hx::DynamicPtr(buffers));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(AL_obj,sourceQueueBuffers,(void))

 ::Dynamic AL_obj::sourceUnqueueBuffer( ::Dynamic source){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_890_sourceUnqueueBuffer)
HXLINE( 893)		 ::hx::Object * res = ::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_unqueue_buffers(hx::DynamicPtr(source),(int)1);
HXLINE( 894)		return ( ( ::Dynamic)(res) )->__GetItem((int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,sourceUnqueueBuffer,return )

::cpp::VirtualArray AL_obj::sourceUnqueueBuffers( ::Dynamic source,int nb){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_905_sourceUnqueueBuffers)
HXLINE( 905)		return ( ( ::Dynamic)(::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_source_unqueue_buffers(hx::DynamicPtr(source),nb)) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(AL_obj,sourceUnqueueBuffers,return )

void AL_obj::speedOfSound(Float value){
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_916_speedOfSound)
HXLINE( 916)		::lime::_backend::native::NativeCFFI_obj::cffi_lime_al_speed_of_sound(value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AL_obj,speedOfSound,(void))


AL_obj::AL_obj()
{
}

bool AL_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"enable") ) { outValue = enable_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"bufferf") ) { outValue = bufferf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferi") ) { outValue = bufferi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"disable") ) { outValue = disable_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcef") ) { outValue = sourcef_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcei") ) { outValue = sourcei_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"buffer3f") ) { outValue = buffer3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"buffer3i") ) { outValue = buffer3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferfv") ) { outValue = bufferfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"bufferiv") ) { outValue = bufferiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getError") ) { outValue = getError_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getFloat") ) { outValue = getFloat_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isBuffer") ) { outValue = isBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isSource") ) { outValue = isSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"source3f") ) { outValue = source3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"source3i") ) { outValue = source3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcefv") ) { outValue = sourcefv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceiv") ) { outValue = sourceiv_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"genSource") ) { outValue = genSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"genBuffer") ) { outValue = genBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDouble") ) { outValue = getDouble_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getFloatv") ) { outValue = getFloatv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getString") ) { outValue = getString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEnabled") ) { outValue = isEnabled_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listenerf") ) { outValue = listenerf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listeneri") ) { outValue = listeneri_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"bufferData") ) { outValue = bufferData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"genSources") ) { outValue = genSources_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"genBuffers") ) { outValue = genBuffers_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBoolean") ) { outValue = getBoolean_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferf") ) { outValue = getBufferf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferi") ) { outValue = getBufferi_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getDoublev") ) { outValue = getDoublev_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getInteger") ) { outValue = getInteger_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourcef") ) { outValue = getSourcef_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourcei") ) { outValue = getSourcei_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listener3f") ) { outValue = listener3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listener3i") ) { outValue = listener3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listenerfv") ) { outValue = listenerfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"listeneriv") ) { outValue = listeneriv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePlay") ) { outValue = sourcePlay_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceStop") ) { outValue = sourceStop_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"getBooleanv") ) { outValue = getBooleanv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBuffer3f") ) { outValue = getBuffer3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBuffer3i") ) { outValue = getBuffer3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferfv") ) { outValue = getBufferfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getBufferiv") ) { outValue = getBufferiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getIntegerv") ) { outValue = getIntegerv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSource3f") ) { outValue = getSource3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSource3i") ) { outValue = getSource3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourcefv") ) { outValue = getSourcefv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getSourceiv") ) { outValue = getSourceiv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePlayv") ) { outValue = sourcePlayv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceStopv") ) { outValue = sourceStopv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePause") ) { outValue = sourcePause_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createBuffer") ) { outValue = createBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createSource") ) { outValue = createSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteBuffer") ) { outValue = deleteBuffer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteSource") ) { outValue = deleteSource_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getEnumValue") ) { outValue = getEnumValue_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListenerf") ) { outValue = getListenerf_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListeneri") ) { outValue = getListeneri_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getParameter") ) { outValue = getParameter_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceRewind") ) { outValue = sourceRewind_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourcePausev") ) { outValue = sourcePausev_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"speedOfSound") ) { outValue = speedOfSound_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"deleteBuffers") ) { outValue = deleteBuffers_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"deleteSources") ) { outValue = deleteSources_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"distanceModel") ) { outValue = distanceModel_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"dopplerFactor") ) { outValue = dopplerFactor_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListener3f") ) { outValue = getListener3f_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListener3i") ) { outValue = getListener3i_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListenerfv") ) { outValue = getListenerfv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getListeneriv") ) { outValue = getListeneriv_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceRewindv") ) { outValue = sourceRewindv_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"getErrorString") ) { outValue = getErrorString_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getProcAddress") ) { outValue = getProcAddress_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"dopplerVelocity") ) { outValue = dopplerVelocity_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"sourceQueueBuffer") ) { outValue = sourceQueueBuffer_dyn(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"isExtensionPresent") ) { outValue = isExtensionPresent_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sourceQueueBuffers") ) { outValue = sourceQueueBuffers_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"sourceUnqueueBuffer") ) { outValue = sourceUnqueueBuffer_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"sourceUnqueueBuffers") ) { outValue = sourceUnqueueBuffers_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *AL_obj_sMemberStorageInfo = 0;
static hx::StaticInfo AL_obj_sStaticStorageInfo[] = {
	{hx::fsInt,(void *) &AL_obj::NONE,HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33")},
	{hx::fsInt,(void *) &AL_obj::FALSE,HX_HCSTRING("FALSE","\x83","\x6d","\x3d","\x79")},
	{hx::fsInt,(void *) &AL_obj::TRUE,HX_HCSTRING("TRUE","\x4e","\x6f","\xc4","\x37")},
	{hx::fsInt,(void *) &AL_obj::SOURCE_RELATIVE,HX_HCSTRING("SOURCE_RELATIVE","\xf0","\xf3","\x84","\xfe")},
	{hx::fsInt,(void *) &AL_obj::CONE_INNER_ANGLE,HX_HCSTRING("CONE_INNER_ANGLE","\x4e","\xa1","\xd7","\x93")},
	{hx::fsInt,(void *) &AL_obj::CONE_OUTER_ANGLE,HX_HCSTRING("CONE_OUTER_ANGLE","\xf3","\xe1","\xbf","\xcc")},
	{hx::fsInt,(void *) &AL_obj::PITCH,HX_HCSTRING("PITCH","\xa0","\xf3","\x8e","\x40")},
	{hx::fsInt,(void *) &AL_obj::POSITION,HX_HCSTRING("POSITION","\xa9","\x30","\x80","\x24")},
	{hx::fsInt,(void *) &AL_obj::DIRECTION,HX_HCSTRING("DIRECTION","\x1f","\xd2","\x98","\x0b")},
	{hx::fsInt,(void *) &AL_obj::VELOCITY,HX_HCSTRING("VELOCITY","\x1d","\x92","\x83","\x78")},
	{hx::fsInt,(void *) &AL_obj::LOOPING,HX_HCSTRING("LOOPING","\xde","\x50","\x51","\xa0")},
	{hx::fsInt,(void *) &AL_obj::BUFFER,HX_HCSTRING("BUFFER","\x00","\x69","\x17","\x83")},
	{hx::fsInt,(void *) &AL_obj::GAIN,HX_HCSTRING("GAIN","\x7f","\xb8","\x1f","\x2f")},
	{hx::fsInt,(void *) &AL_obj::MIN_GAIN,HX_HCSTRING("MIN_GAIN","\xac","\x29","\xd2","\x21")},
	{hx::fsInt,(void *) &AL_obj::MAX_GAIN,HX_HCSTRING("MAX_GAIN","\x5a","\x0f","\xb8","\xd4")},
	{hx::fsInt,(void *) &AL_obj::ORIENTATION,HX_HCSTRING("ORIENTATION","\xb0","\xfa","\x3a","\xd4")},
	{hx::fsInt,(void *) &AL_obj::SOURCE_STATE,HX_HCSTRING("SOURCE_STATE","\x4d","\xe8","\x1e","\xab")},
	{hx::fsInt,(void *) &AL_obj::INITIAL,HX_HCSTRING("INITIAL","\x64","\xe4","\x72","\x4b")},
	{hx::fsInt,(void *) &AL_obj::PLAYING,HX_HCSTRING("PLAYING","\x4e","\xe3","\xeb","\x09")},
	{hx::fsInt,(void *) &AL_obj::PAUSED,HX_HCSTRING("PAUSED","\xae","\xec","\x06","\xa2")},
	{hx::fsInt,(void *) &AL_obj::STOPPED,HX_HCSTRING("STOPPED","\xed","\xa5","\x35","\xc3")},
	{hx::fsInt,(void *) &AL_obj::BUFFERS_QUEUED,HX_HCSTRING("BUFFERS_QUEUED","\x5f","\x78","\xce","\x71")},
	{hx::fsInt,(void *) &AL_obj::BUFFERS_PROCESSED,HX_HCSTRING("BUFFERS_PROCESSED","\x42","\x9d","\x62","\xac")},
	{hx::fsInt,(void *) &AL_obj::REFERENCE_DISTANCE,HX_HCSTRING("REFERENCE_DISTANCE","\x89","\xd5","\xce","\x9a")},
	{hx::fsInt,(void *) &AL_obj::ROLLOFF_FACTOR,HX_HCSTRING("ROLLOFF_FACTOR","\xbc","\x10","\x98","\x56")},
	{hx::fsInt,(void *) &AL_obj::CONE_OUTER_GAIN,HX_HCSTRING("CONE_OUTER_GAIN","\x3f","\xda","\x8d","\xe3")},
	{hx::fsInt,(void *) &AL_obj::MAX_DISTANCE,HX_HCSTRING("MAX_DISTANCE","\x90","\x83","\xbb","\xa5")},
	{hx::fsInt,(void *) &AL_obj::SEC_OFFSET,HX_HCSTRING("SEC_OFFSET","\xe1","\x5d","\xa3","\xac")},
	{hx::fsInt,(void *) &AL_obj::SAMPLE_OFFSET,HX_HCSTRING("SAMPLE_OFFSET","\x48","\x82","\xac","\xb4")},
	{hx::fsInt,(void *) &AL_obj::BYTE_OFFSET,HX_HCSTRING("BYTE_OFFSET","\x2a","\xdf","\x43","\x36")},
	{hx::fsInt,(void *) &AL_obj::SOURCE_TYPE,HX_HCSTRING("SOURCE_TYPE","\xde","\xff","\x00","\xdf")},
	{hx::fsInt,(void *) &AL_obj::STATIC,HX_HCSTRING("STATIC","\xae","\x88","\x7e","\xb8")},
	{hx::fsInt,(void *) &AL_obj::STREAMING,HX_HCSTRING("STREAMING","\x42","\x38","\x7b","\xb1")},
	{hx::fsInt,(void *) &AL_obj::UNDETERMINED,HX_HCSTRING("UNDETERMINED","\x0a","\xed","\x9d","\x50")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_MONO8,HX_HCSTRING("FORMAT_MONO8","\x6d","\x40","\x81","\x7a")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_MONO16,HX_HCSTRING("FORMAT_MONO16","\x10","\x19","\x97","\xb6")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_STEREO8,HX_HCSTRING("FORMAT_STEREO8","\xb8","\x19","\x58","\xda")},
	{hx::fsInt,(void *) &AL_obj::FORMAT_STEREO16,HX_HCSTRING("FORMAT_STEREO16","\x65","\x61","\xbe","\x32")},
	{hx::fsInt,(void *) &AL_obj::FREQUENCY,HX_HCSTRING("FREQUENCY","\x7c","\xf2","\x42","\xb7")},
	{hx::fsInt,(void *) &AL_obj::BITS,HX_HCSTRING("BITS","\x06","\xc3","\xd7","\x2b")},
	{hx::fsInt,(void *) &AL_obj::CHANNELS,HX_HCSTRING("CHANNELS","\x50","\x3a","\x74","\xc4")},
	{hx::fsInt,(void *) &AL_obj::SIZE,HX_HCSTRING("SIZE","\xc1","\x68","\x14","\x37")},
	{hx::fsInt,(void *) &AL_obj::NO_ERROR,HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f")},
	{hx::fsInt,(void *) &AL_obj::INVALID_NAME,HX_HCSTRING("INVALID_NAME","\xf3","\x7b","\x59","\x19")},
	{hx::fsInt,(void *) &AL_obj::INVALID_ENUM,HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13")},
	{hx::fsInt,(void *) &AL_obj::INVALID_VALUE,HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0")},
	{hx::fsInt,(void *) &AL_obj::INVALID_OPERATION,HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29")},
	{hx::fsInt,(void *) &AL_obj::OUT_OF_MEMORY,HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1")},
	{hx::fsInt,(void *) &AL_obj::VENDOR,HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51")},
	{hx::fsInt,(void *) &AL_obj::VERSION,HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc")},
	{hx::fsInt,(void *) &AL_obj::RENDERER,HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c")},
	{hx::fsInt,(void *) &AL_obj::EXTENSIONS,HX_HCSTRING("EXTENSIONS","\x14","\xf0","\x79","\x7b")},
	{hx::fsInt,(void *) &AL_obj::DOPPLER_FACTOR,HX_HCSTRING("DOPPLER_FACTOR","\xe0","\x6d","\x21","\x56")},
	{hx::fsInt,(void *) &AL_obj::SPEED_OF_SOUND,HX_HCSTRING("SPEED_OF_SOUND","\x5f","\x3f","\x54","\xba")},
	{hx::fsInt,(void *) &AL_obj::DOPPLER_VELOCITY,HX_HCSTRING("DOPPLER_VELOCITY","\x6e","\xe1","\x7d","\x1d")},
	{hx::fsInt,(void *) &AL_obj::DISTANCE_MODEL,HX_HCSTRING("DISTANCE_MODEL","\xbf","\x9b","\x1a","\x00")},
	{hx::fsInt,(void *) &AL_obj::INVERSE_DISTANCE,HX_HCSTRING("INVERSE_DISTANCE","\x04","\x89","\x17","\x1d")},
	{hx::fsInt,(void *) &AL_obj::INVERSE_DISTANCE_CLAMPED,HX_HCSTRING("INVERSE_DISTANCE_CLAMPED","\x7f","\x1a","\x32","\x28")},
	{hx::fsInt,(void *) &AL_obj::LINEAR_DISTANCE,HX_HCSTRING("LINEAR_DISTANCE","\x0f","\xb8","\xc7","\x14")},
	{hx::fsInt,(void *) &AL_obj::LINEAR_DISTANCE_CLAMPED,HX_HCSTRING("LINEAR_DISTANCE_CLAMPED","\x8a","\xcc","\x88","\xb2")},
	{hx::fsInt,(void *) &AL_obj::EXPONENT_DISTANCE,HX_HCSTRING("EXPONENT_DISTANCE","\x45","\x4a","\xec","\xc8")},
	{hx::fsInt,(void *) &AL_obj::EXPONENT_DISTANCE_CLAMPED,HX_HCSTRING("EXPONENT_DISTANCE_CLAMPED","\xc0","\x84","\x7b","\x57")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void AL_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(AL_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(AL_obj::NONE,"NONE");
	HX_MARK_MEMBER_NAME(AL_obj::FALSE,"FALSE");
	HX_MARK_MEMBER_NAME(AL_obj::TRUE,"TRUE");
	HX_MARK_MEMBER_NAME(AL_obj::SOURCE_RELATIVE,"SOURCE_RELATIVE");
	HX_MARK_MEMBER_NAME(AL_obj::CONE_INNER_ANGLE,"CONE_INNER_ANGLE");
	HX_MARK_MEMBER_NAME(AL_obj::CONE_OUTER_ANGLE,"CONE_OUTER_ANGLE");
	HX_MARK_MEMBER_NAME(AL_obj::PITCH,"PITCH");
	HX_MARK_MEMBER_NAME(AL_obj::POSITION,"POSITION");
	HX_MARK_MEMBER_NAME(AL_obj::DIRECTION,"DIRECTION");
	HX_MARK_MEMBER_NAME(AL_obj::VELOCITY,"VELOCITY");
	HX_MARK_MEMBER_NAME(AL_obj::LOOPING,"LOOPING");
	HX_MARK_MEMBER_NAME(AL_obj::BUFFER,"BUFFER");
	HX_MARK_MEMBER_NAME(AL_obj::GAIN,"GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::MIN_GAIN,"MIN_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::MAX_GAIN,"MAX_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::ORIENTATION,"ORIENTATION");
	HX_MARK_MEMBER_NAME(AL_obj::SOURCE_STATE,"SOURCE_STATE");
	HX_MARK_MEMBER_NAME(AL_obj::INITIAL,"INITIAL");
	HX_MARK_MEMBER_NAME(AL_obj::PLAYING,"PLAYING");
	HX_MARK_MEMBER_NAME(AL_obj::PAUSED,"PAUSED");
	HX_MARK_MEMBER_NAME(AL_obj::STOPPED,"STOPPED");
	HX_MARK_MEMBER_NAME(AL_obj::BUFFERS_QUEUED,"BUFFERS_QUEUED");
	HX_MARK_MEMBER_NAME(AL_obj::BUFFERS_PROCESSED,"BUFFERS_PROCESSED");
	HX_MARK_MEMBER_NAME(AL_obj::REFERENCE_DISTANCE,"REFERENCE_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::ROLLOFF_FACTOR,"ROLLOFF_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::CONE_OUTER_GAIN,"CONE_OUTER_GAIN");
	HX_MARK_MEMBER_NAME(AL_obj::MAX_DISTANCE,"MAX_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::SEC_OFFSET,"SEC_OFFSET");
	HX_MARK_MEMBER_NAME(AL_obj::SAMPLE_OFFSET,"SAMPLE_OFFSET");
	HX_MARK_MEMBER_NAME(AL_obj::BYTE_OFFSET,"BYTE_OFFSET");
	HX_MARK_MEMBER_NAME(AL_obj::SOURCE_TYPE,"SOURCE_TYPE");
	HX_MARK_MEMBER_NAME(AL_obj::STATIC,"STATIC");
	HX_MARK_MEMBER_NAME(AL_obj::STREAMING,"STREAMING");
	HX_MARK_MEMBER_NAME(AL_obj::UNDETERMINED,"UNDETERMINED");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_MONO8,"FORMAT_MONO8");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_MONO16,"FORMAT_MONO16");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_STEREO8,"FORMAT_STEREO8");
	HX_MARK_MEMBER_NAME(AL_obj::FORMAT_STEREO16,"FORMAT_STEREO16");
	HX_MARK_MEMBER_NAME(AL_obj::FREQUENCY,"FREQUENCY");
	HX_MARK_MEMBER_NAME(AL_obj::BITS,"BITS");
	HX_MARK_MEMBER_NAME(AL_obj::CHANNELS,"CHANNELS");
	HX_MARK_MEMBER_NAME(AL_obj::SIZE,"SIZE");
	HX_MARK_MEMBER_NAME(AL_obj::NO_ERROR,"NO_ERROR");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_NAME,"INVALID_NAME");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_MARK_MEMBER_NAME(AL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_MARK_MEMBER_NAME(AL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_MARK_MEMBER_NAME(AL_obj::VENDOR,"VENDOR");
	HX_MARK_MEMBER_NAME(AL_obj::VERSION,"VERSION");
	HX_MARK_MEMBER_NAME(AL_obj::RENDERER,"RENDERER");
	HX_MARK_MEMBER_NAME(AL_obj::EXTENSIONS,"EXTENSIONS");
	HX_MARK_MEMBER_NAME(AL_obj::DOPPLER_FACTOR,"DOPPLER_FACTOR");
	HX_MARK_MEMBER_NAME(AL_obj::SPEED_OF_SOUND,"SPEED_OF_SOUND");
	HX_MARK_MEMBER_NAME(AL_obj::DOPPLER_VELOCITY,"DOPPLER_VELOCITY");
	HX_MARK_MEMBER_NAME(AL_obj::DISTANCE_MODEL,"DISTANCE_MODEL");
	HX_MARK_MEMBER_NAME(AL_obj::INVERSE_DISTANCE,"INVERSE_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::INVERSE_DISTANCE_CLAMPED,"INVERSE_DISTANCE_CLAMPED");
	HX_MARK_MEMBER_NAME(AL_obj::LINEAR_DISTANCE,"LINEAR_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::LINEAR_DISTANCE_CLAMPED,"LINEAR_DISTANCE_CLAMPED");
	HX_MARK_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE,"EXPONENT_DISTANCE");
	HX_MARK_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE_CLAMPED,"EXPONENT_DISTANCE_CLAMPED");
};

#ifdef HXCPP_VISIT_ALLOCS
static void AL_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(AL_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(AL_obj::NONE,"NONE");
	HX_VISIT_MEMBER_NAME(AL_obj::FALSE,"FALSE");
	HX_VISIT_MEMBER_NAME(AL_obj::TRUE,"TRUE");
	HX_VISIT_MEMBER_NAME(AL_obj::SOURCE_RELATIVE,"SOURCE_RELATIVE");
	HX_VISIT_MEMBER_NAME(AL_obj::CONE_INNER_ANGLE,"CONE_INNER_ANGLE");
	HX_VISIT_MEMBER_NAME(AL_obj::CONE_OUTER_ANGLE,"CONE_OUTER_ANGLE");
	HX_VISIT_MEMBER_NAME(AL_obj::PITCH,"PITCH");
	HX_VISIT_MEMBER_NAME(AL_obj::POSITION,"POSITION");
	HX_VISIT_MEMBER_NAME(AL_obj::DIRECTION,"DIRECTION");
	HX_VISIT_MEMBER_NAME(AL_obj::VELOCITY,"VELOCITY");
	HX_VISIT_MEMBER_NAME(AL_obj::LOOPING,"LOOPING");
	HX_VISIT_MEMBER_NAME(AL_obj::BUFFER,"BUFFER");
	HX_VISIT_MEMBER_NAME(AL_obj::GAIN,"GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::MIN_GAIN,"MIN_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::MAX_GAIN,"MAX_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::ORIENTATION,"ORIENTATION");
	HX_VISIT_MEMBER_NAME(AL_obj::SOURCE_STATE,"SOURCE_STATE");
	HX_VISIT_MEMBER_NAME(AL_obj::INITIAL,"INITIAL");
	HX_VISIT_MEMBER_NAME(AL_obj::PLAYING,"PLAYING");
	HX_VISIT_MEMBER_NAME(AL_obj::PAUSED,"PAUSED");
	HX_VISIT_MEMBER_NAME(AL_obj::STOPPED,"STOPPED");
	HX_VISIT_MEMBER_NAME(AL_obj::BUFFERS_QUEUED,"BUFFERS_QUEUED");
	HX_VISIT_MEMBER_NAME(AL_obj::BUFFERS_PROCESSED,"BUFFERS_PROCESSED");
	HX_VISIT_MEMBER_NAME(AL_obj::REFERENCE_DISTANCE,"REFERENCE_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::ROLLOFF_FACTOR,"ROLLOFF_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::CONE_OUTER_GAIN,"CONE_OUTER_GAIN");
	HX_VISIT_MEMBER_NAME(AL_obj::MAX_DISTANCE,"MAX_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::SEC_OFFSET,"SEC_OFFSET");
	HX_VISIT_MEMBER_NAME(AL_obj::SAMPLE_OFFSET,"SAMPLE_OFFSET");
	HX_VISIT_MEMBER_NAME(AL_obj::BYTE_OFFSET,"BYTE_OFFSET");
	HX_VISIT_MEMBER_NAME(AL_obj::SOURCE_TYPE,"SOURCE_TYPE");
	HX_VISIT_MEMBER_NAME(AL_obj::STATIC,"STATIC");
	HX_VISIT_MEMBER_NAME(AL_obj::STREAMING,"STREAMING");
	HX_VISIT_MEMBER_NAME(AL_obj::UNDETERMINED,"UNDETERMINED");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_MONO8,"FORMAT_MONO8");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_MONO16,"FORMAT_MONO16");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_STEREO8,"FORMAT_STEREO8");
	HX_VISIT_MEMBER_NAME(AL_obj::FORMAT_STEREO16,"FORMAT_STEREO16");
	HX_VISIT_MEMBER_NAME(AL_obj::FREQUENCY,"FREQUENCY");
	HX_VISIT_MEMBER_NAME(AL_obj::BITS,"BITS");
	HX_VISIT_MEMBER_NAME(AL_obj::CHANNELS,"CHANNELS");
	HX_VISIT_MEMBER_NAME(AL_obj::SIZE,"SIZE");
	HX_VISIT_MEMBER_NAME(AL_obj::NO_ERROR,"NO_ERROR");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_NAME,"INVALID_NAME");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_ENUM,"INVALID_ENUM");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_VALUE,"INVALID_VALUE");
	HX_VISIT_MEMBER_NAME(AL_obj::INVALID_OPERATION,"INVALID_OPERATION");
	HX_VISIT_MEMBER_NAME(AL_obj::OUT_OF_MEMORY,"OUT_OF_MEMORY");
	HX_VISIT_MEMBER_NAME(AL_obj::VENDOR,"VENDOR");
	HX_VISIT_MEMBER_NAME(AL_obj::VERSION,"VERSION");
	HX_VISIT_MEMBER_NAME(AL_obj::RENDERER,"RENDERER");
	HX_VISIT_MEMBER_NAME(AL_obj::EXTENSIONS,"EXTENSIONS");
	HX_VISIT_MEMBER_NAME(AL_obj::DOPPLER_FACTOR,"DOPPLER_FACTOR");
	HX_VISIT_MEMBER_NAME(AL_obj::SPEED_OF_SOUND,"SPEED_OF_SOUND");
	HX_VISIT_MEMBER_NAME(AL_obj::DOPPLER_VELOCITY,"DOPPLER_VELOCITY");
	HX_VISIT_MEMBER_NAME(AL_obj::DISTANCE_MODEL,"DISTANCE_MODEL");
	HX_VISIT_MEMBER_NAME(AL_obj::INVERSE_DISTANCE,"INVERSE_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::INVERSE_DISTANCE_CLAMPED,"INVERSE_DISTANCE_CLAMPED");
	HX_VISIT_MEMBER_NAME(AL_obj::LINEAR_DISTANCE,"LINEAR_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::LINEAR_DISTANCE_CLAMPED,"LINEAR_DISTANCE_CLAMPED");
	HX_VISIT_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE,"EXPONENT_DISTANCE");
	HX_VISIT_MEMBER_NAME(AL_obj::EXPONENT_DISTANCE_CLAMPED,"EXPONENT_DISTANCE_CLAMPED");
};

#endif

hx::Class AL_obj::__mClass;

static ::String AL_obj_sStaticFields[] = {
	HX_HCSTRING("NONE","\xb8","\xda","\xca","\x33"),
	HX_HCSTRING("FALSE","\x83","\x6d","\x3d","\x79"),
	HX_HCSTRING("TRUE","\x4e","\x6f","\xc4","\x37"),
	HX_HCSTRING("SOURCE_RELATIVE","\xf0","\xf3","\x84","\xfe"),
	HX_HCSTRING("CONE_INNER_ANGLE","\x4e","\xa1","\xd7","\x93"),
	HX_HCSTRING("CONE_OUTER_ANGLE","\xf3","\xe1","\xbf","\xcc"),
	HX_HCSTRING("PITCH","\xa0","\xf3","\x8e","\x40"),
	HX_HCSTRING("POSITION","\xa9","\x30","\x80","\x24"),
	HX_HCSTRING("DIRECTION","\x1f","\xd2","\x98","\x0b"),
	HX_HCSTRING("VELOCITY","\x1d","\x92","\x83","\x78"),
	HX_HCSTRING("LOOPING","\xde","\x50","\x51","\xa0"),
	HX_HCSTRING("BUFFER","\x00","\x69","\x17","\x83"),
	HX_HCSTRING("GAIN","\x7f","\xb8","\x1f","\x2f"),
	HX_HCSTRING("MIN_GAIN","\xac","\x29","\xd2","\x21"),
	HX_HCSTRING("MAX_GAIN","\x5a","\x0f","\xb8","\xd4"),
	HX_HCSTRING("ORIENTATION","\xb0","\xfa","\x3a","\xd4"),
	HX_HCSTRING("SOURCE_STATE","\x4d","\xe8","\x1e","\xab"),
	HX_HCSTRING("INITIAL","\x64","\xe4","\x72","\x4b"),
	HX_HCSTRING("PLAYING","\x4e","\xe3","\xeb","\x09"),
	HX_HCSTRING("PAUSED","\xae","\xec","\x06","\xa2"),
	HX_HCSTRING("STOPPED","\xed","\xa5","\x35","\xc3"),
	HX_HCSTRING("BUFFERS_QUEUED","\x5f","\x78","\xce","\x71"),
	HX_HCSTRING("BUFFERS_PROCESSED","\x42","\x9d","\x62","\xac"),
	HX_HCSTRING("REFERENCE_DISTANCE","\x89","\xd5","\xce","\x9a"),
	HX_HCSTRING("ROLLOFF_FACTOR","\xbc","\x10","\x98","\x56"),
	HX_HCSTRING("CONE_OUTER_GAIN","\x3f","\xda","\x8d","\xe3"),
	HX_HCSTRING("MAX_DISTANCE","\x90","\x83","\xbb","\xa5"),
	HX_HCSTRING("SEC_OFFSET","\xe1","\x5d","\xa3","\xac"),
	HX_HCSTRING("SAMPLE_OFFSET","\x48","\x82","\xac","\xb4"),
	HX_HCSTRING("BYTE_OFFSET","\x2a","\xdf","\x43","\x36"),
	HX_HCSTRING("SOURCE_TYPE","\xde","\xff","\x00","\xdf"),
	HX_HCSTRING("STATIC","\xae","\x88","\x7e","\xb8"),
	HX_HCSTRING("STREAMING","\x42","\x38","\x7b","\xb1"),
	HX_HCSTRING("UNDETERMINED","\x0a","\xed","\x9d","\x50"),
	HX_HCSTRING("FORMAT_MONO8","\x6d","\x40","\x81","\x7a"),
	HX_HCSTRING("FORMAT_MONO16","\x10","\x19","\x97","\xb6"),
	HX_HCSTRING("FORMAT_STEREO8","\xb8","\x19","\x58","\xda"),
	HX_HCSTRING("FORMAT_STEREO16","\x65","\x61","\xbe","\x32"),
	HX_HCSTRING("FREQUENCY","\x7c","\xf2","\x42","\xb7"),
	HX_HCSTRING("BITS","\x06","\xc3","\xd7","\x2b"),
	HX_HCSTRING("CHANNELS","\x50","\x3a","\x74","\xc4"),
	HX_HCSTRING("SIZE","\xc1","\x68","\x14","\x37"),
	HX_HCSTRING("NO_ERROR","\xea","\xb5","\x7d","\x2f"),
	HX_HCSTRING("INVALID_NAME","\xf3","\x7b","\x59","\x19"),
	HX_HCSTRING("INVALID_ENUM","\xa9","\x74","\x70","\x13"),
	HX_HCSTRING("INVALID_VALUE","\xa9","\xe8","\x26","\xb0"),
	HX_HCSTRING("INVALID_OPERATION","\x5f","\xb1","\xc8","\x29"),
	HX_HCSTRING("OUT_OF_MEMORY","\x18","\xf2","\x97","\xe1"),
	HX_HCSTRING("VENDOR","\x88","\x91","\x19","\x51"),
	HX_HCSTRING("VERSION","\xf8","\xba","\xc5","\xfc"),
	HX_HCSTRING("RENDERER","\x43","\x55","\x61","\x0c"),
	HX_HCSTRING("EXTENSIONS","\x14","\xf0","\x79","\x7b"),
	HX_HCSTRING("DOPPLER_FACTOR","\xe0","\x6d","\x21","\x56"),
	HX_HCSTRING("SPEED_OF_SOUND","\x5f","\x3f","\x54","\xba"),
	HX_HCSTRING("DOPPLER_VELOCITY","\x6e","\xe1","\x7d","\x1d"),
	HX_HCSTRING("DISTANCE_MODEL","\xbf","\x9b","\x1a","\x00"),
	HX_HCSTRING("INVERSE_DISTANCE","\x04","\x89","\x17","\x1d"),
	HX_HCSTRING("INVERSE_DISTANCE_CLAMPED","\x7f","\x1a","\x32","\x28"),
	HX_HCSTRING("LINEAR_DISTANCE","\x0f","\xb8","\xc7","\x14"),
	HX_HCSTRING("LINEAR_DISTANCE_CLAMPED","\x8a","\xcc","\x88","\xb2"),
	HX_HCSTRING("EXPONENT_DISTANCE","\x45","\x4a","\xec","\xc8"),
	HX_HCSTRING("EXPONENT_DISTANCE_CLAMPED","\xc0","\x84","\x7b","\x57"),
	HX_HCSTRING("bufferData","\x4a","\xbf","\x73","\x93"),
	HX_HCSTRING("buffer3f","\xd3","\x29","\xfe","\xac"),
	HX_HCSTRING("buffer3i","\xd6","\x29","\xfe","\xac"),
	HX_HCSTRING("bufferf","\x66","\xa3","\x90","\xb1"),
	HX_HCSTRING("bufferfv","\x50","\x56","\xfe","\xac"),
	HX_HCSTRING("bufferi","\x69","\xa3","\x90","\xb1"),
	HX_HCSTRING("bufferiv","\xed","\x58","\xfe","\xac"),
	HX_HCSTRING("createBuffer","\x1c","\xfd","\xe9","\xf2"),
	HX_HCSTRING("createSource","\xf7","\xf0","\x86","\x54"),
	HX_HCSTRING("deleteBuffer","\x8b","\xe3","\x2c","\x37"),
	HX_HCSTRING("deleteBuffers","\x88","\x36","\x1a","\x10"),
	HX_HCSTRING("deleteSource","\x66","\xd7","\xc9","\x98"),
	HX_HCSTRING("deleteSources","\x4d","\xa2","\xd2","\x17"),
	HX_HCSTRING("disable","\xe8","\x69","\x58","\xb1"),
	HX_HCSTRING("distanceModel","\x34","\x40","\xe1","\xd3"),
	HX_HCSTRING("dopplerFactor","\xdd","\x2d","\x05","\x6f"),
	HX_HCSTRING("dopplerVelocity","\xab","\x76","\xcf","\x06"),
	HX_HCSTRING("enable","\x83","\xae","\x87","\xf8"),
	HX_HCSTRING("genSource","\x8b","\x71","\x07","\xb5"),
	HX_HCSTRING("genSources","\x88","\xe8","\x7b","\xb1"),
	HX_HCSTRING("genBuffer","\xb0","\x7d","\x6a","\x53"),
	HX_HCSTRING("genBuffers","\xc3","\x7c","\xc3","\xa9"),
	HX_HCSTRING("getBoolean","\xb2","\x70","\x60","\xcd"),
	HX_HCSTRING("getBooleanv","\x84","\x2b","\x02","\xe7"),
	HX_HCSTRING("getBuffer3f","\x89","\xec","\xf1","\xd2"),
	HX_HCSTRING("getBuffer3i","\x8c","\xec","\xf1","\xd2"),
	HX_HCSTRING("getBufferf","\x70","\x29","\xf2","\x00"),
	HX_HCSTRING("getBufferfv","\x06","\x19","\xf2","\xd2"),
	HX_HCSTRING("getBufferi","\x73","\x29","\xf2","\x00"),
	HX_HCSTRING("getBufferiv","\xa3","\x1b","\xf2","\xd2"),
	HX_HCSTRING("getDouble","\x47","\xb4","\x21","\xaf"),
	HX_HCSTRING("getDoublev","\x4f","\x0a","\x5c","\x8e"),
	HX_HCSTRING("getEnumValue","\x3a","\x9d","\x5d","\x37"),
	HX_HCSTRING("getError","\x52","\xdb","\x00","\xd3"),
	HX_HCSTRING("getErrorString","\xc3","\xc1","\x3b","\x87"),
	HX_HCSTRING("getFloat","\x26","\xd5","\x6d","\x62"),
	HX_HCSTRING("getFloatv","\x90","\xac","\xac","\xbd"),
	HX_HCSTRING("getInteger","\xc8","\x43","\x7d","\x66"),
	HX_HCSTRING("getIntegerv","\xae","\x0b","\x1e","\x47"),
	HX_HCSTRING("getListener3f","\x7d","\x8e","\x7c","\x85"),
	HX_HCSTRING("getListener3i","\x80","\x8e","\x7c","\x85"),
	HX_HCSTRING("getListenerf","\xfc","\x01","\xe5","\x02"),
	HX_HCSTRING("getListenerfv","\xfa","\xba","\x7c","\x85"),
	HX_HCSTRING("getListeneri","\xff","\x01","\xe5","\x02"),
	HX_HCSTRING("getListeneriv","\x97","\xbd","\x7c","\x85"),
	HX_HCSTRING("getParameter","\x33","\xd2","\x06","\x58"),
	HX_HCSTRING("getProcAddress","\xc8","\xe3","\xa1","\x89"),
	HX_HCSTRING("getSource3f","\x24","\xcd","\x97","\x8c"),
	HX_HCSTRING("getSourcef","\x35","\x95","\xaa","\x08"),
	HX_HCSTRING("getSource3i","\x27","\xcd","\x97","\x8c"),
	HX_HCSTRING("getSourcefv","\xa1","\xf9","\x97","\x8c"),
	HX_HCSTRING("getSourcei","\x38","\x95","\xaa","\x08"),
	HX_HCSTRING("getSourceiv","\x3e","\xfc","\x97","\x8c"),
	HX_HCSTRING("getString","\x07","\xb2","\x86","\x8d"),
	HX_HCSTRING("isBuffer","\x8a","\x58","\xfe","\x28"),
	HX_HCSTRING("isEnabled","\xb7","\x81","\x2f","\x82"),
	HX_HCSTRING("isExtensionPresent","\x46","\xf9","\x2a","\xb4"),
	HX_HCSTRING("isSource","\x65","\x4c","\x9b","\x8a"),
	HX_HCSTRING("listener3f","\x47","\x32","\x0a","\x29"),
	HX_HCSTRING("listener3i","\x4a","\x32","\x0a","\x29"),
	HX_HCSTRING("listenerf","\x72","\x65","\x8e","\xf3"),
	HX_HCSTRING("listenerfv","\xc4","\x5e","\x0a","\x29"),
	HX_HCSTRING("listeneri","\x75","\x65","\x8e","\xf3"),
	HX_HCSTRING("listeneriv","\x61","\x61","\x0a","\x29"),
	HX_HCSTRING("source3f","\x6e","\x0a","\xa4","\x66"),
	HX_HCSTRING("source3i","\x71","\x0a","\xa4","\x66"),
	HX_HCSTRING("sourcef","\x2b","\x0f","\x49","\xb9"),
	HX_HCSTRING("sourcefv","\xeb","\x36","\xa4","\x66"),
	HX_HCSTRING("sourcei","\x2e","\x0f","\x49","\xb9"),
	HX_HCSTRING("sourceiv","\x88","\x39","\xa4","\x66"),
	HX_HCSTRING("sourcePlay","\x6f","\x14","\xbe","\x72"),
	HX_HCSTRING("sourcePlayv","\x27","\xcd","\x93","\xf3"),
	HX_HCSTRING("sourceStop","\x7d","\xd6","\xbf","\x74"),
	HX_HCSTRING("sourceStopv","\x59","\xd7","\x1b","\xb3"),
	HX_HCSTRING("sourceRewind","\x36","\xe5","\x26","\x01"),
	HX_HCSTRING("sourceRewindv","\x80","\xaa","\xe1","\x00"),
	HX_HCSTRING("sourcePause","\x1b","\x9c","\x5d","\xec"),
	HX_HCSTRING("sourcePausev","\xfb","\xfb","\x8a","\xe5"),
	HX_HCSTRING("sourceQueueBuffer","\x56","\x70","\x65","\x56"),
	HX_HCSTRING("sourceQueueBuffers","\x5d","\xdb","\x5c","\x42"),
	HX_HCSTRING("sourceUnqueueBuffer","\xdd","\x29","\x95","\x2e"),
	HX_HCSTRING("sourceUnqueueBuffers","\xf6","\x77","\xef","\x93"),
	HX_HCSTRING("speedOfSound","\x71","\xe7","\x21","\x0a"),
	::String(null())
};

void AL_obj::__register()
{
	hx::Object *dummy = new AL_obj;
	AL_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("lime.media.openal.AL","\x21","\x39","\x77","\x65");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AL_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = AL_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(AL_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< AL_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = AL_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AL_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AL_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void AL_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_19_boot)
HXLINE(  19)		NONE = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_20_boot)
HXLINE(  20)		FALSE = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_21_boot)
HXLINE(  21)		TRUE = (int)1;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_22_boot)
HXLINE(  22)		SOURCE_RELATIVE = (int)514;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_23_boot)
HXLINE(  23)		CONE_INNER_ANGLE = (int)4097;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_24_boot)
HXLINE(  24)		CONE_OUTER_ANGLE = (int)4098;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_25_boot)
HXLINE(  25)		PITCH = (int)4099;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_26_boot)
HXLINE(  26)		POSITION = (int)4100;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_27_boot)
HXLINE(  27)		DIRECTION = (int)4101;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_28_boot)
HXLINE(  28)		VELOCITY = (int)4102;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_29_boot)
HXLINE(  29)		LOOPING = (int)4103;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_30_boot)
HXLINE(  30)		BUFFER = (int)4105;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_31_boot)
HXLINE(  31)		GAIN = (int)4106;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_32_boot)
HXLINE(  32)		MIN_GAIN = (int)4109;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_33_boot)
HXLINE(  33)		MAX_GAIN = (int)4110;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_34_boot)
HXLINE(  34)		ORIENTATION = (int)4111;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_35_boot)
HXLINE(  35)		SOURCE_STATE = (int)4112;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_36_boot)
HXLINE(  36)		INITIAL = (int)4113;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_37_boot)
HXLINE(  37)		PLAYING = (int)4114;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_38_boot)
HXLINE(  38)		PAUSED = (int)4115;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_39_boot)
HXLINE(  39)		STOPPED = (int)4116;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_40_boot)
HXLINE(  40)		BUFFERS_QUEUED = (int)4117;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_41_boot)
HXLINE(  41)		BUFFERS_PROCESSED = (int)4118;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_42_boot)
HXLINE(  42)		REFERENCE_DISTANCE = (int)4128;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_43_boot)
HXLINE(  43)		ROLLOFF_FACTOR = (int)4129;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_44_boot)
HXLINE(  44)		CONE_OUTER_GAIN = (int)4130;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_45_boot)
HXLINE(  45)		MAX_DISTANCE = (int)4131;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_46_boot)
HXLINE(  46)		SEC_OFFSET = (int)4132;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_47_boot)
HXLINE(  47)		SAMPLE_OFFSET = (int)4133;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_48_boot)
HXLINE(  48)		BYTE_OFFSET = (int)4134;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_49_boot)
HXLINE(  49)		SOURCE_TYPE = (int)4135;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_50_boot)
HXLINE(  50)		STATIC = (int)4136;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_51_boot)
HXLINE(  51)		STREAMING = (int)4137;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_52_boot)
HXLINE(  52)		UNDETERMINED = (int)4144;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_53_boot)
HXLINE(  53)		FORMAT_MONO8 = (int)4352;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_54_boot)
HXLINE(  54)		FORMAT_MONO16 = (int)4353;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_55_boot)
HXLINE(  55)		FORMAT_STEREO8 = (int)4354;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_56_boot)
HXLINE(  56)		FORMAT_STEREO16 = (int)4355;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_57_boot)
HXLINE(  57)		FREQUENCY = (int)8193;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_58_boot)
HXLINE(  58)		BITS = (int)8194;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_59_boot)
HXLINE(  59)		CHANNELS = (int)8195;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_60_boot)
HXLINE(  60)		SIZE = (int)8196;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_61_boot)
HXLINE(  61)		NO_ERROR = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_62_boot)
HXLINE(  62)		INVALID_NAME = (int)40961;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_63_boot)
HXLINE(  63)		INVALID_ENUM = (int)40962;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_64_boot)
HXLINE(  64)		INVALID_VALUE = (int)40963;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_65_boot)
HXLINE(  65)		INVALID_OPERATION = (int)40964;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_66_boot)
HXLINE(  66)		OUT_OF_MEMORY = (int)40965;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_67_boot)
HXLINE(  67)		VENDOR = (int)45057;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_68_boot)
HXLINE(  68)		VERSION = (int)45058;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_69_boot)
HXLINE(  69)		RENDERER = (int)45059;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_70_boot)
HXLINE(  70)		EXTENSIONS = (int)45060;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_71_boot)
HXLINE(  71)		DOPPLER_FACTOR = (int)49152;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_72_boot)
HXLINE(  72)		SPEED_OF_SOUND = (int)49155;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_73_boot)
HXLINE(  73)		DOPPLER_VELOCITY = (int)49153;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_74_boot)
HXLINE(  74)		DISTANCE_MODEL = (int)53248;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_75_boot)
HXLINE(  75)		INVERSE_DISTANCE = (int)53249;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_76_boot)
HXLINE(  76)		INVERSE_DISTANCE_CLAMPED = (int)53250;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_77_boot)
HXLINE(  77)		LINEAR_DISTANCE = (int)53251;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_78_boot)
HXLINE(  78)		LINEAR_DISTANCE_CLAMPED = (int)53252;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_79_boot)
HXLINE(  79)		EXPONENT_DISTANCE = (int)53253;
            	}
{
            	HX_STACKFRAME(&_hx_pos_87306d7050ce8f43_80_boot)
HXLINE(  80)		EXPONENT_DISTANCE_CLAMPED = (int)53254;
            	}
}

} // end namespace lime
} // end namespace media
} // end namespace openal
